<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icpay.payment.db.dao.mybatis.mapper.ChnlMchntAccountFlowExtMapper">
  <resultMap id="BaseResultMap" type="com.icpay.payment.db.dao.mybatis.model.ChnlMchntAccountFlow">
      <id column="seq_id" property="seqId" javaType="java.lang.Long" jdbcType="BIGINT" />
      <result column="chnl_id"  property="chnlId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="mchnt_cd"  property="mchntCd" javaType="java.lang.String" jdbcType="CHAR" />
      <result column="trans_at"  property="transAt" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <result column="trans_fee"  property="transFee" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <result column="curr_cd"  property="currCd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="operate_tp"  property="operateTp" javaType="java.lang.String" jdbcType="CHAR" />
      <result column="available_balance"  property="availableBalance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <result column="frozen_t1_balance"  property="frozenT1Balance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <result column="frozen_balance"  property="frozenBalance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <result column="trans_seq_id"  property="transSeqId" javaType="java.lang.String" jdbcType="CHAR" />
      <result column="trans_dt"  property="transDt" javaType="java.lang.String" jdbcType="CHAR" />
      <result column="trans_tm"  property="transTm" javaType="java.lang.String" jdbcType="CHAR" />
      <result column="note"  property="note" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="last_oper_id"  property="lastOperId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="rec_crt_ts"  property="recCrtTs" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <result column="rec_upd_ts"  property="recUpdTs" javaType="java.util.Date" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `seq_id`, `chnl_id`, `mchnt_cd`, `trans_at`, `trans_fee`, `curr_cd`, `operate_tp`, 
    `available_balance`, `frozen_t1_balance`, `frozen_balance`, `trans_seq_id`, `trans_dt`, 
    `trans_tm`, `note`, `last_oper_id`, `rec_crt_ts`, `rec_upd_ts`
  </sql>
  
  <select id="selectByExample"  resultMap="BaseResultMap">
    select
    <if test="(example != null) and example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `tbl_chnl_mchnt_account_flow${mon}`
    <if test="example != null">
        <include refid="Example_Where_Clause" />
        <if test="example.orderByClause != null">
          order by ${example.orderByClause}
        </if>
    </if>
  </select>
  
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 19 23:09:47 CST 2014.
    -->
    select
    <include refid="Base_Column_List" />
    from tbl_chnl_mchnt_account_flow${mon}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    limit #{example.startNum}, #{example.pageSize}
  </select>
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `tbl_chnl_mchnt_account_flow${mon}`
    where `seq_id` = #{seqId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" >
    delete from `tbl_chnl_mchnt_account_flow${mon}`
    where `seq_id` = #{seqId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" >
    delete from `tbl_chnl_mchnt_account_flow${mon}`
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" >
    insert into `tbl_chnl_mchnt_account_flow${mon}` (`seq_id`, `chnl_id`, `mchnt_cd`, 
      `trans_at`, `trans_fee`, `curr_cd`, 
      `operate_tp`, `available_balance`, `frozen_t1_balance`, 
      `frozen_balance`, `trans_seq_id`, `trans_dt`, 
      `trans_tm`, `note`, `last_oper_id`, 
      `rec_crt_ts`, `rec_upd_ts`)
    values (#{record.seqId,jdbcType=BIGINT}, #{record.chnlId,jdbcType=VARCHAR}, #{record.mchntCd,jdbcType=CHAR}, 
      #{record.transAt,jdbcType=DECIMAL}, #{record.transFee,jdbcType=DECIMAL}, #{record.currCd,jdbcType=VARCHAR}, 
      #{record.operateTp,jdbcType=CHAR}, #{record.availableBalance,jdbcType=DECIMAL}, #{record.frozenT1Balance,jdbcType=DECIMAL}, 
      #{record.frozenBalance,jdbcType=DECIMAL}, #{record.transSeqId,jdbcType=CHAR}, #{record.transDt,jdbcType=CHAR}, 
      #{record.transTm,jdbcType=CHAR}, #{record.note,jdbcType=VARCHAR}, #{record.lastOperId,jdbcType=VARCHAR}, 
      #{record.recCrtTs,jdbcType=TIMESTAMP}, #{record.recUpdTs,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" >
    insert into `tbl_chnl_mchnt_account_flow${mon}`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.seqId != null">
        `seq_id`,
      </if>
      <if test="record.chnlId != null">
        `chnl_id`,
      </if>
      <if test="record.mchntCd != null">
        `mchnt_cd`,
      </if>
      <if test="record.transAt != null">
        `trans_at`,
      </if>
      <if test="record.transFee != null">
        `trans_fee`,
      </if>
      <if test="record.currCd != null">
        `curr_cd`,
      </if>
      <if test="record.operateTp != null">
        `operate_tp`,
      </if>
      <if test="record.availableBalance != null">
        `available_balance`,
      </if>
      <if test="record.frozenT1Balance != null">
        `frozen_t1_balance`,
      </if>
      <if test="record.frozenBalance != null">
        `frozen_balance`,
      </if>
      <if test="record.transSeqId != null">
        `trans_seq_id`,
      </if>
      <if test="record.transDt != null">
        `trans_dt`,
      </if>
      <if test="record.transTm != null">
        `trans_tm`,
      </if>
      <if test="record.note != null">
        `note`,
      </if>
      <if test="record.lastOperId != null">
        `last_oper_id`,
      </if>
      <if test="record.recCrtTs != null">
        `rec_crt_ts`,
      </if>
      <if test="record.recUpdTs != null">
        `rec_upd_ts`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.seqId != null">
        #{record.seqId,jdbcType=BIGINT},
      </if>
      <if test="record.chnlId != null">
        #{record.chnlId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchntCd != null">
        #{record.mchntCd,jdbcType=CHAR},
      </if>
      <if test="record.transAt != null">
        #{record.transAt,jdbcType=DECIMAL},
      </if>
      <if test="record.transFee != null">
        #{record.transFee,jdbcType=DECIMAL},
      </if>
      <if test="record.currCd != null">
        #{record.currCd,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTp != null">
        #{record.operateTp,jdbcType=CHAR},
      </if>
      <if test="record.availableBalance != null">
        #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenT1Balance != null">
        #{record.frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenBalance != null">
        #{record.frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.transSeqId != null">
        #{record.transSeqId,jdbcType=CHAR},
      </if>
      <if test="record.transDt != null">
        #{record.transDt,jdbcType=CHAR},
      </if>
      <if test="record.transTm != null">
        #{record.transTm,jdbcType=CHAR},
      </if>
      <if test="record.note != null">
        #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.lastOperId != null">
        #{record.lastOperId,jdbcType=VARCHAR},
      </if>
      <if test="record.recCrtTs != null">
        #{record.recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdTs != null">
        #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample"  resultType="java.lang.Long">
    select count(*) from `tbl_chnl_mchnt_account_flow${mon}`
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" >
    update `tbl_chnl_mchnt_account_flow${mon}`
    <set>
      <if test="record.seqId != null">
        `seq_id` = #{record.seqId,jdbcType=BIGINT},
      </if>
      <if test="record.chnlId != null">
        `chnl_id` = #{record.chnlId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchntCd != null">
        `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      </if>
      <if test="record.transAt != null">
        `trans_at` = #{record.transAt,jdbcType=DECIMAL},
      </if>
      <if test="record.transFee != null">
        `trans_fee` = #{record.transFee,jdbcType=DECIMAL},
      </if>
      <if test="record.currCd != null">
        `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTp != null">
        `operate_tp` = #{record.operateTp,jdbcType=CHAR},
      </if>
      <if test="record.availableBalance != null">
        `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenT1Balance != null">
        `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenBalance != null">
        `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.transSeqId != null">
        `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      </if>
      <if test="record.transDt != null">
        `trans_dt` = #{record.transDt,jdbcType=CHAR},
      </if>
      <if test="record.transTm != null">
        `trans_tm` = #{record.transTm,jdbcType=CHAR},
      </if>
      <if test="record.note != null">
        `note` = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.lastOperId != null">
        `last_oper_id` = #{record.lastOperId,jdbcType=VARCHAR},
      </if>
      <if test="record.recCrtTs != null">
        `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdTs != null">
        `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" >
    update `tbl_chnl_mchnt_account_flow${mon}`
    set `seq_id` = #{record.seqId,jdbcType=BIGINT},
      `chnl_id` = #{record.chnlId,jdbcType=VARCHAR},
      `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      `trans_at` = #{record.transAt,jdbcType=DECIMAL},
      `trans_fee` = #{record.transFee,jdbcType=DECIMAL},
      `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      `operate_tp` = #{record.operateTp,jdbcType=CHAR},
      `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      `trans_dt` = #{record.transDt,jdbcType=CHAR},
      `trans_tm` = #{record.transTm,jdbcType=CHAR},
      `note` = #{record.note,jdbcType=VARCHAR},
      `last_oper_id` = #{record.lastOperId,jdbcType=VARCHAR},
      `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" >
    update `tbl_chnl_mchnt_account_flow${mon}`
    <set>
      <if test="record.chnlId != null">
        `chnl_id` = #{record.chnlId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchntCd != null">
        `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      </if>
      <if test="record.transAt != null">
        `trans_at` = #{record.transAt,jdbcType=DECIMAL},
      </if>
      <if test="record.transFee != null">
        `trans_fee` = #{record.transFee,jdbcType=DECIMAL},
      </if>
      <if test="record.currCd != null">
        `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTp != null">
        `operate_tp` = #{record.operateTp,jdbcType=CHAR},
      </if>
      <if test="record.availableBalance != null">
        `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenT1Balance != null">
        `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenBalance != null">
        `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.transSeqId != null">
        `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      </if>
      <if test="record.transDt != null">
        `trans_dt` = #{record.transDt,jdbcType=CHAR},
      </if>
      <if test="record.transTm != null">
        `trans_tm` = #{record.transTm,jdbcType=CHAR},
      </if>
      <if test="record.note != null">
        `note` = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.lastOperId != null">
        `last_oper_id` = #{record.lastOperId,jdbcType=VARCHAR},
      </if>
      <if test="record.recCrtTs != null">
        `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdTs != null">
        `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `seq_id` = #{record.seqId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" >
    update `tbl_chnl_mchnt_account_flow${mon}`
    set `chnl_id` = #{record.chnlId,jdbcType=VARCHAR},
      `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      `trans_at` = #{record.transAt,jdbcType=DECIMAL},
      `trans_fee` = #{record.transFee,jdbcType=DECIMAL},
      `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      `operate_tp` = #{record.operateTp,jdbcType=CHAR},
      `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      `trans_dt` = #{record.transDt,jdbcType=CHAR},
      `trans_tm` = #{record.transTm,jdbcType=CHAR},
      `note` = #{record.note,jdbcType=VARCHAR},
      `last_oper_id` = #{record.lastOperId,jdbcType=VARCHAR},
      `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP}
    where `seq_id` = #{record.seqId,jdbcType=BIGINT}
  </update>
</mapper>