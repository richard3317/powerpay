<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icpay.payment.db.dao.mybatis.mapper.EventLogMapper">
  <resultMap id="BaseResultMap" type="com.icpay.payment.db.dao.mybatis.model.EventLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="log_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="log_ts" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_date" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="log_time" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="log_role" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_src" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_event" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_event_target" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_event_result" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_event_reason" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_event_reason_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_node" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_level" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="log_code" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="log_msg" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_params" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="trans_seq_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="int_trans_cd" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="mchnt_cd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="trans_chnl" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="chnl_mchnt_cd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="chnl_order_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="session_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="error_cls" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tags" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `log_id`, `log_ts`, `log_date`, `log_time`, `log_role`, `log_src`, `log_event`, `log_event_target`, 
    `log_event_result`, `log_event_reason`, `log_event_reason_type`, `log_node`, `log_level`, 
    `log_code`, `log_msg`, `log_params`, `trans_seq_id`, `int_trans_cd`, `mchnt_cd`, 
    `user_id`, `order_id`, `trans_chnl`, `chnl_mchnt_cd`, `chnl_order_id`, `session_id`, 
    `error_cls`, `tags`
  </sql>
  <select id="selectByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `tbl_event_log_01`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `tbl_event_log_01`
    where `log_id` = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `tbl_event_log_01`
    where `log_id` = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `tbl_event_log_01`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `tbl_event_log_01` (`log_id`, `log_ts`, `log_date`, 
      `log_time`, `log_role`, `log_src`, 
      `log_event`, `log_event_target`, `log_event_result`, 
      `log_event_reason`, `log_event_reason_type`, `log_node`, 
      `log_level`, `log_code`, `log_msg`, 
      `log_params`, `trans_seq_id`, `int_trans_cd`, 
      `mchnt_cd`, `user_id`, `order_id`, 
      `trans_chnl`, `chnl_mchnt_cd`, `chnl_order_id`, 
      `session_id`, `error_cls`, `tags`
      )
    values (#{logId,jdbcType=BIGINT}, #{logTs,jdbcType=TIMESTAMP}, #{logDate,jdbcType=CHAR}, 
      #{logTime,jdbcType=CHAR}, #{logRole,jdbcType=VARCHAR}, #{logSrc,jdbcType=VARCHAR}, 
      #{logEvent,jdbcType=VARCHAR}, #{logEventTarget,jdbcType=VARCHAR}, #{logEventResult,jdbcType=VARCHAR}, 
      #{logEventReason,jdbcType=VARCHAR}, #{logEventReasonType,jdbcType=VARCHAR}, #{logNode,jdbcType=VARCHAR}, 
      #{logLevel,jdbcType=CHAR}, #{logCode,jdbcType=CHAR}, #{logMsg,jdbcType=VARCHAR}, 
      #{logParams,jdbcType=VARCHAR}, #{transSeqId,jdbcType=CHAR}, #{intTransCd,jdbcType=CHAR}, 
      #{mchntCd,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{transChnl,jdbcType=CHAR}, #{chnlMchntCd,jdbcType=VARCHAR}, #{chnlOrderId,jdbcType=VARCHAR}, 
      #{sessionId,jdbcType=VARCHAR}, #{errorCls,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `tbl_event_log_01`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        `log_id`,
      </if>
      <if test="logTs != null">
        `log_ts`,
      </if>
      <if test="logDate != null">
        `log_date`,
      </if>
      <if test="logTime != null">
        `log_time`,
      </if>
      <if test="logRole != null">
        `log_role`,
      </if>
      <if test="logSrc != null">
        `log_src`,
      </if>
      <if test="logEvent != null">
        `log_event`,
      </if>
      <if test="logEventTarget != null">
        `log_event_target`,
      </if>
      <if test="logEventResult != null">
        `log_event_result`,
      </if>
      <if test="logEventReason != null">
        `log_event_reason`,
      </if>
      <if test="logEventReasonType != null">
        `log_event_reason_type`,
      </if>
      <if test="logNode != null">
        `log_node`,
      </if>
      <if test="logLevel != null">
        `log_level`,
      </if>
      <if test="logCode != null">
        `log_code`,
      </if>
      <if test="logMsg != null">
        `log_msg`,
      </if>
      <if test="logParams != null">
        `log_params`,
      </if>
      <if test="transSeqId != null">
        `trans_seq_id`,
      </if>
      <if test="intTransCd != null">
        `int_trans_cd`,
      </if>
      <if test="mchntCd != null">
        `mchnt_cd`,
      </if>
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="orderId != null">
        `order_id`,
      </if>
      <if test="transChnl != null">
        `trans_chnl`,
      </if>
      <if test="chnlMchntCd != null">
        `chnl_mchnt_cd`,
      </if>
      <if test="chnlOrderId != null">
        `chnl_order_id`,
      </if>
      <if test="sessionId != null">
        `session_id`,
      </if>
      <if test="errorCls != null">
        `error_cls`,
      </if>
      <if test="tags != null">
        `tags`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="logTs != null">
        #{logTs,jdbcType=TIMESTAMP},
      </if>
      <if test="logDate != null">
        #{logDate,jdbcType=CHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=CHAR},
      </if>
      <if test="logRole != null">
        #{logRole,jdbcType=VARCHAR},
      </if>
      <if test="logSrc != null">
        #{logSrc,jdbcType=VARCHAR},
      </if>
      <if test="logEvent != null">
        #{logEvent,jdbcType=VARCHAR},
      </if>
      <if test="logEventTarget != null">
        #{logEventTarget,jdbcType=VARCHAR},
      </if>
      <if test="logEventResult != null">
        #{logEventResult,jdbcType=VARCHAR},
      </if>
      <if test="logEventReason != null">
        #{logEventReason,jdbcType=VARCHAR},
      </if>
      <if test="logEventReasonType != null">
        #{logEventReasonType,jdbcType=VARCHAR},
      </if>
      <if test="logNode != null">
        #{logNode,jdbcType=VARCHAR},
      </if>
      <if test="logLevel != null">
        #{logLevel,jdbcType=CHAR},
      </if>
      <if test="logCode != null">
        #{logCode,jdbcType=CHAR},
      </if>
      <if test="logMsg != null">
        #{logMsg,jdbcType=VARCHAR},
      </if>
      <if test="logParams != null">
        #{logParams,jdbcType=VARCHAR},
      </if>
      <if test="transSeqId != null">
        #{transSeqId,jdbcType=CHAR},
      </if>
      <if test="intTransCd != null">
        #{intTransCd,jdbcType=CHAR},
      </if>
      <if test="mchntCd != null">
        #{mchntCd,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="transChnl != null">
        #{transChnl,jdbcType=CHAR},
      </if>
      <if test="chnlMchntCd != null">
        #{chnlMchntCd,jdbcType=VARCHAR},
      </if>
      <if test="chnlOrderId != null">
        #{chnlOrderId,jdbcType=VARCHAR},
      </if>
      <if test="sessionId != null">
        #{sessionId,jdbcType=VARCHAR},
      </if>
      <if test="errorCls != null">
        #{errorCls,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from `tbl_event_log_01`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_event_log_01`
    <set>
      <if test="record.logId != null">
        `log_id` = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.logTs != null">
        `log_ts` = #{record.logTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logDate != null">
        `log_date` = #{record.logDate,jdbcType=CHAR},
      </if>
      <if test="record.logTime != null">
        `log_time` = #{record.logTime,jdbcType=CHAR},
      </if>
      <if test="record.logRole != null">
        `log_role` = #{record.logRole,jdbcType=VARCHAR},
      </if>
      <if test="record.logSrc != null">
        `log_src` = #{record.logSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.logEvent != null">
        `log_event` = #{record.logEvent,jdbcType=VARCHAR},
      </if>
      <if test="record.logEventTarget != null">
        `log_event_target` = #{record.logEventTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.logEventResult != null">
        `log_event_result` = #{record.logEventResult,jdbcType=VARCHAR},
      </if>
      <if test="record.logEventReason != null">
        `log_event_reason` = #{record.logEventReason,jdbcType=VARCHAR},
      </if>
      <if test="record.logEventReasonType != null">
        `log_event_reason_type` = #{record.logEventReasonType,jdbcType=VARCHAR},
      </if>
      <if test="record.logNode != null">
        `log_node` = #{record.logNode,jdbcType=VARCHAR},
      </if>
      <if test="record.logLevel != null">
        `log_level` = #{record.logLevel,jdbcType=CHAR},
      </if>
      <if test="record.logCode != null">
        `log_code` = #{record.logCode,jdbcType=CHAR},
      </if>
      <if test="record.logMsg != null">
        `log_msg` = #{record.logMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.logParams != null">
        `log_params` = #{record.logParams,jdbcType=VARCHAR},
      </if>
      <if test="record.transSeqId != null">
        `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      </if>
      <if test="record.intTransCd != null">
        `int_trans_cd` = #{record.intTransCd,jdbcType=CHAR},
      </if>
      <if test="record.mchntCd != null">
        `mchnt_cd` = #{record.mchntCd,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        `user_id` = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        `order_id` = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.transChnl != null">
        `trans_chnl` = #{record.transChnl,jdbcType=CHAR},
      </if>
      <if test="record.chnlMchntCd != null">
        `chnl_mchnt_cd` = #{record.chnlMchntCd,jdbcType=VARCHAR},
      </if>
      <if test="record.chnlOrderId != null">
        `chnl_order_id` = #{record.chnlOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionId != null">
        `session_id` = #{record.sessionId,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCls != null">
        `error_cls` = #{record.errorCls,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        `tags` = #{record.tags,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_event_log_01`
    set `log_id` = #{record.logId,jdbcType=BIGINT},
      `log_ts` = #{record.logTs,jdbcType=TIMESTAMP},
      `log_date` = #{record.logDate,jdbcType=CHAR},
      `log_time` = #{record.logTime,jdbcType=CHAR},
      `log_role` = #{record.logRole,jdbcType=VARCHAR},
      `log_src` = #{record.logSrc,jdbcType=VARCHAR},
      `log_event` = #{record.logEvent,jdbcType=VARCHAR},
      `log_event_target` = #{record.logEventTarget,jdbcType=VARCHAR},
      `log_event_result` = #{record.logEventResult,jdbcType=VARCHAR},
      `log_event_reason` = #{record.logEventReason,jdbcType=VARCHAR},
      `log_event_reason_type` = #{record.logEventReasonType,jdbcType=VARCHAR},
      `log_node` = #{record.logNode,jdbcType=VARCHAR},
      `log_level` = #{record.logLevel,jdbcType=CHAR},
      `log_code` = #{record.logCode,jdbcType=CHAR},
      `log_msg` = #{record.logMsg,jdbcType=VARCHAR},
      `log_params` = #{record.logParams,jdbcType=VARCHAR},
      `trans_seq_id` = #{record.transSeqId,jdbcType=CHAR},
      `int_trans_cd` = #{record.intTransCd,jdbcType=CHAR},
      `mchnt_cd` = #{record.mchntCd,jdbcType=VARCHAR},
      `user_id` = #{record.userId,jdbcType=VARCHAR},
      `order_id` = #{record.orderId,jdbcType=VARCHAR},
      `trans_chnl` = #{record.transChnl,jdbcType=CHAR},
      `chnl_mchnt_cd` = #{record.chnlMchntCd,jdbcType=VARCHAR},
      `chnl_order_id` = #{record.chnlOrderId,jdbcType=VARCHAR},
      `session_id` = #{record.sessionId,jdbcType=VARCHAR},
      `error_cls` = #{record.errorCls,jdbcType=VARCHAR},
      `tags` = #{record.tags,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_event_log_01`
    <set>
      <if test="logTs != null">
        `log_ts` = #{logTs,jdbcType=TIMESTAMP},
      </if>
      <if test="logDate != null">
        `log_date` = #{logDate,jdbcType=CHAR},
      </if>
      <if test="logTime != null">
        `log_time` = #{logTime,jdbcType=CHAR},
      </if>
      <if test="logRole != null">
        `log_role` = #{logRole,jdbcType=VARCHAR},
      </if>
      <if test="logSrc != null">
        `log_src` = #{logSrc,jdbcType=VARCHAR},
      </if>
      <if test="logEvent != null">
        `log_event` = #{logEvent,jdbcType=VARCHAR},
      </if>
      <if test="logEventTarget != null">
        `log_event_target` = #{logEventTarget,jdbcType=VARCHAR},
      </if>
      <if test="logEventResult != null">
        `log_event_result` = #{logEventResult,jdbcType=VARCHAR},
      </if>
      <if test="logEventReason != null">
        `log_event_reason` = #{logEventReason,jdbcType=VARCHAR},
      </if>
      <if test="logEventReasonType != null">
        `log_event_reason_type` = #{logEventReasonType,jdbcType=VARCHAR},
      </if>
      <if test="logNode != null">
        `log_node` = #{logNode,jdbcType=VARCHAR},
      </if>
      <if test="logLevel != null">
        `log_level` = #{logLevel,jdbcType=CHAR},
      </if>
      <if test="logCode != null">
        `log_code` = #{logCode,jdbcType=CHAR},
      </if>
      <if test="logMsg != null">
        `log_msg` = #{logMsg,jdbcType=VARCHAR},
      </if>
      <if test="logParams != null">
        `log_params` = #{logParams,jdbcType=VARCHAR},
      </if>
      <if test="transSeqId != null">
        `trans_seq_id` = #{transSeqId,jdbcType=CHAR},
      </if>
      <if test="intTransCd != null">
        `int_trans_cd` = #{intTransCd,jdbcType=CHAR},
      </if>
      <if test="mchntCd != null">
        `mchnt_cd` = #{mchntCd,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        `user_id` = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        `order_id` = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="transChnl != null">
        `trans_chnl` = #{transChnl,jdbcType=CHAR},
      </if>
      <if test="chnlMchntCd != null">
        `chnl_mchnt_cd` = #{chnlMchntCd,jdbcType=VARCHAR},
      </if>
      <if test="chnlOrderId != null">
        `chnl_order_id` = #{chnlOrderId,jdbcType=VARCHAR},
      </if>
      <if test="sessionId != null">
        `session_id` = #{sessionId,jdbcType=VARCHAR},
      </if>
      <if test="errorCls != null">
        `error_cls` = #{errorCls,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        `tags` = #{tags,jdbcType=VARCHAR},
      </if>
    </set>
    where `log_id` = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_event_log_01`
    set `log_ts` = #{logTs,jdbcType=TIMESTAMP},
      `log_date` = #{logDate,jdbcType=CHAR},
      `log_time` = #{logTime,jdbcType=CHAR},
      `log_role` = #{logRole,jdbcType=VARCHAR},
      `log_src` = #{logSrc,jdbcType=VARCHAR},
      `log_event` = #{logEvent,jdbcType=VARCHAR},
      `log_event_target` = #{logEventTarget,jdbcType=VARCHAR},
      `log_event_result` = #{logEventResult,jdbcType=VARCHAR},
      `log_event_reason` = #{logEventReason,jdbcType=VARCHAR},
      `log_event_reason_type` = #{logEventReasonType,jdbcType=VARCHAR},
      `log_node` = #{logNode,jdbcType=VARCHAR},
      `log_level` = #{logLevel,jdbcType=CHAR},
      `log_code` = #{logCode,jdbcType=CHAR},
      `log_msg` = #{logMsg,jdbcType=VARCHAR},
      `log_params` = #{logParams,jdbcType=VARCHAR},
      `trans_seq_id` = #{transSeqId,jdbcType=CHAR},
      `int_trans_cd` = #{intTransCd,jdbcType=CHAR},
      `mchnt_cd` = #{mchntCd,jdbcType=VARCHAR},
      `user_id` = #{userId,jdbcType=VARCHAR},
      `order_id` = #{orderId,jdbcType=VARCHAR},
      `trans_chnl` = #{transChnl,jdbcType=CHAR},
      `chnl_mchnt_cd` = #{chnlMchntCd,jdbcType=VARCHAR},
      `chnl_order_id` = #{chnlOrderId,jdbcType=VARCHAR},
      `session_id` = #{sessionId,jdbcType=VARCHAR},
      `error_cls` = #{errorCls,jdbcType=VARCHAR},
      `tags` = #{tags,jdbcType=VARCHAR}
    where `log_id` = #{logId,jdbcType=BIGINT}
  </update>
  <select id="selectByPage" parameterType="com.icpay.payment.db.dao.mybatis.model.EventLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `tbl_event_log_01`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startNum != null and pageSize !=null ">
      limit #{startNum} , #{pageSize}
    </if>
  </select>
</mapper>