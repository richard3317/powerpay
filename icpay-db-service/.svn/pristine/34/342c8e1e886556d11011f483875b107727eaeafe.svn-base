<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icpay.payment.db.dao.mybatis.mapper.MerAccountInfoMapper">
  <resultMap id="BaseResultMap" type="com.icpay.payment.db.dao.mybatis.model.MerAccountInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="mchnt_cd" javaType="java.lang.String" jdbcType="CHAR" />
      <idArg column="curr_cd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="available_balance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="obligated_balance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="frozen_t1_balance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="frozen_balance" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="next_t1_trans_amount" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="state" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="dayTxnAmt" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="dayTxnFee" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="dayTxnCount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="dayWithdrawAmt" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="dayWithdrawFee" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="dayWithdrawCount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tags" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="rec_crt_ts" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="rec_upd_ts" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `mchnt_cd`, `curr_cd`, `unit`, `available_balance`, `obligated_balance`, `frozen_t1_balance`, 
    `frozen_balance`, `next_t1_trans_amount`, `state`, `dayTxnAmt`, `dayTxnFee`, `dayTxnCount`, 
    `dayWithdrawAmt`, `dayWithdrawFee`, `dayWithdrawCount`, `tags`, `rec_crt_ts`, `rec_upd_ts`
  </sql>
  <select id="selectByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `tbl_mer_account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `tbl_mer_account_info`
    where `mchnt_cd` = #{mchntCd,jdbcType=CHAR}
      and `curr_cd` = #{currCd,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `tbl_mer_account_info`
    where `mchnt_cd` = #{mchntCd,jdbcType=CHAR}
      and `curr_cd` = #{currCd,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `tbl_mer_account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `tbl_mer_account_info` (`mchnt_cd`, `curr_cd`, `unit`, 
      `available_balance`, `obligated_balance`, `frozen_t1_balance`, 
      `frozen_balance`, `next_t1_trans_amount`, `state`, 
      `dayTxnAmt`, `dayTxnFee`, `dayTxnCount`, 
      `dayWithdrawAmt`, `dayWithdrawFee`, `dayWithdrawCount`, 
      `tags`, `rec_crt_ts`, `rec_upd_ts`
      )
    values (#{mchntCd,jdbcType=CHAR}, #{currCd,jdbcType=VARCHAR}, #{unit,jdbcType=DECIMAL}, 
      #{availableBalance,jdbcType=DECIMAL}, #{obligatedBalance,jdbcType=DECIMAL}, #{frozenT1Balance,jdbcType=DECIMAL}, 
      #{frozenBalance,jdbcType=DECIMAL}, #{nextT1TransAmount,jdbcType=DECIMAL}, #{state,jdbcType=CHAR}, 
      #{daytxnamt,jdbcType=DECIMAL}, #{daytxnfee,jdbcType=DECIMAL}, #{daytxncount,jdbcType=INTEGER}, 
      #{daywithdrawamt,jdbcType=DECIMAL}, #{daywithdrawfee,jdbcType=DECIMAL}, #{daywithdrawcount,jdbcType=INTEGER}, 
      #{tags,jdbcType=VARCHAR}, #{recCrtTs,jdbcType=TIMESTAMP}, #{recUpdTs,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `tbl_mer_account_info`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mchntCd != null">
        `mchnt_cd`,
      </if>
      <if test="currCd != null">
        `curr_cd`,
      </if>
      <if test="unit != null">
        `unit`,
      </if>
      <if test="availableBalance != null">
        `available_balance`,
      </if>
      <if test="obligatedBalance != null">
        `obligated_balance`,
      </if>
      <if test="frozenT1Balance != null">
        `frozen_t1_balance`,
      </if>
      <if test="frozenBalance != null">
        `frozen_balance`,
      </if>
      <if test="nextT1TransAmount != null">
        `next_t1_trans_amount`,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="daytxnamt != null">
        `dayTxnAmt`,
      </if>
      <if test="daytxnfee != null">
        `dayTxnFee`,
      </if>
      <if test="daytxncount != null">
        `dayTxnCount`,
      </if>
      <if test="daywithdrawamt != null">
        `dayWithdrawAmt`,
      </if>
      <if test="daywithdrawfee != null">
        `dayWithdrawFee`,
      </if>
      <if test="daywithdrawcount != null">
        `dayWithdrawCount`,
      </if>
      <if test="tags != null">
        `tags`,
      </if>
      <if test="recCrtTs != null">
        `rec_crt_ts`,
      </if>
      <if test="recUpdTs != null">
        `rec_upd_ts`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mchntCd != null">
        #{mchntCd,jdbcType=CHAR},
      </if>
      <if test="currCd != null">
        #{currCd,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="obligatedBalance != null">
        #{obligatedBalance,jdbcType=DECIMAL},
      </if>
      <if test="frozenT1Balance != null">
        #{frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="frozenBalance != null">
        #{frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="nextT1TransAmount != null">
        #{nextT1TransAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="daytxnamt != null">
        #{daytxnamt,jdbcType=DECIMAL},
      </if>
      <if test="daytxnfee != null">
        #{daytxnfee,jdbcType=DECIMAL},
      </if>
      <if test="daytxncount != null">
        #{daytxncount,jdbcType=INTEGER},
      </if>
      <if test="daywithdrawamt != null">
        #{daywithdrawamt,jdbcType=DECIMAL},
      </if>
      <if test="daywithdrawfee != null">
        #{daywithdrawfee,jdbcType=DECIMAL},
      </if>
      <if test="daywithdrawcount != null">
        #{daywithdrawcount,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="recCrtTs != null">
        #{recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdTs != null">
        #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from `tbl_mer_account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_mer_account_info`
    <set>
      <if test="record.mchntCd != null">
        `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      </if>
      <if test="record.currCd != null">
        `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        `unit` = #{record.unit,jdbcType=DECIMAL},
      </if>
      <if test="record.availableBalance != null">
        `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.obligatedBalance != null">
        `obligated_balance` = #{record.obligatedBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenT1Balance != null">
        `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenBalance != null">
        `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.nextT1TransAmount != null">
        `next_t1_trans_amount` = #{record.nextT1TransAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.daytxnamt != null">
        `dayTxnAmt` = #{record.daytxnamt,jdbcType=DECIMAL},
      </if>
      <if test="record.daytxnfee != null">
        `dayTxnFee` = #{record.daytxnfee,jdbcType=DECIMAL},
      </if>
      <if test="record.daytxncount != null">
        `dayTxnCount` = #{record.daytxncount,jdbcType=INTEGER},
      </if>
      <if test="record.daywithdrawamt != null">
        `dayWithdrawAmt` = #{record.daywithdrawamt,jdbcType=DECIMAL},
      </if>
      <if test="record.daywithdrawfee != null">
        `dayWithdrawFee` = #{record.daywithdrawfee,jdbcType=DECIMAL},
      </if>
      <if test="record.daywithdrawcount != null">
        `dayWithdrawCount` = #{record.daywithdrawcount,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null">
        `tags` = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.recCrtTs != null">
        `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdTs != null">
        `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_mer_account_info`
    set `mchnt_cd` = #{record.mchntCd,jdbcType=CHAR},
      `curr_cd` = #{record.currCd,jdbcType=VARCHAR},
      `unit` = #{record.unit,jdbcType=DECIMAL},
      `available_balance` = #{record.availableBalance,jdbcType=DECIMAL},
      `obligated_balance` = #{record.obligatedBalance,jdbcType=DECIMAL},
      `frozen_t1_balance` = #{record.frozenT1Balance,jdbcType=DECIMAL},
      `frozen_balance` = #{record.frozenBalance,jdbcType=DECIMAL},
      `next_t1_trans_amount` = #{record.nextT1TransAmount,jdbcType=DECIMAL},
      `state` = #{record.state,jdbcType=CHAR},
      `dayTxnAmt` = #{record.daytxnamt,jdbcType=DECIMAL},
      `dayTxnFee` = #{record.daytxnfee,jdbcType=DECIMAL},
      `dayTxnCount` = #{record.daytxncount,jdbcType=INTEGER},
      `dayWithdrawAmt` = #{record.daywithdrawamt,jdbcType=DECIMAL},
      `dayWithdrawFee` = #{record.daywithdrawfee,jdbcType=DECIMAL},
      `dayWithdrawCount` = #{record.daywithdrawcount,jdbcType=INTEGER},
      `tags` = #{record.tags,jdbcType=VARCHAR},
      `rec_crt_ts` = #{record.recCrtTs,jdbcType=TIMESTAMP},
      `rec_upd_ts` = #{record.recUpdTs,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_mer_account_info`
    <set>
      <if test="unit != null">
        `unit` = #{unit,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        `available_balance` = #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="obligatedBalance != null">
        `obligated_balance` = #{obligatedBalance,jdbcType=DECIMAL},
      </if>
      <if test="frozenT1Balance != null">
        `frozen_t1_balance` = #{frozenT1Balance,jdbcType=DECIMAL},
      </if>
      <if test="frozenBalance != null">
        `frozen_balance` = #{frozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="nextT1TransAmount != null">
        `next_t1_trans_amount` = #{nextT1TransAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=CHAR},
      </if>
      <if test="daytxnamt != null">
        `dayTxnAmt` = #{daytxnamt,jdbcType=DECIMAL},
      </if>
      <if test="daytxnfee != null">
        `dayTxnFee` = #{daytxnfee,jdbcType=DECIMAL},
      </if>
      <if test="daytxncount != null">
        `dayTxnCount` = #{daytxncount,jdbcType=INTEGER},
      </if>
      <if test="daywithdrawamt != null">
        `dayWithdrawAmt` = #{daywithdrawamt,jdbcType=DECIMAL},
      </if>
      <if test="daywithdrawfee != null">
        `dayWithdrawFee` = #{daywithdrawfee,jdbcType=DECIMAL},
      </if>
      <if test="daywithdrawcount != null">
        `dayWithdrawCount` = #{daywithdrawcount,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        `tags` = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="recCrtTs != null">
        `rec_crt_ts` = #{recCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdTs != null">
        `rec_upd_ts` = #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `mchnt_cd` = #{mchntCd,jdbcType=CHAR}
      and `curr_cd` = #{currCd,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `tbl_mer_account_info`
    set `unit` = #{unit,jdbcType=DECIMAL},
      `available_balance` = #{availableBalance,jdbcType=DECIMAL},
      `obligated_balance` = #{obligatedBalance,jdbcType=DECIMAL},
      `frozen_t1_balance` = #{frozenT1Balance,jdbcType=DECIMAL},
      `frozen_balance` = #{frozenBalance,jdbcType=DECIMAL},
      `next_t1_trans_amount` = #{nextT1TransAmount,jdbcType=DECIMAL},
      `state` = #{state,jdbcType=CHAR},
      `dayTxnAmt` = #{daytxnamt,jdbcType=DECIMAL},
      `dayTxnFee` = #{daytxnfee,jdbcType=DECIMAL},
      `dayTxnCount` = #{daytxncount,jdbcType=INTEGER},
      `dayWithdrawAmt` = #{daywithdrawamt,jdbcType=DECIMAL},
      `dayWithdrawFee` = #{daywithdrawfee,jdbcType=DECIMAL},
      `dayWithdrawCount` = #{daywithdrawcount,jdbcType=INTEGER},
      `tags` = #{tags,jdbcType=VARCHAR},
      `rec_crt_ts` = #{recCrtTs,jdbcType=TIMESTAMP},
      `rec_upd_ts` = #{recUpdTs,jdbcType=TIMESTAMP}
    where `mchnt_cd` = #{mchntCd,jdbcType=CHAR}
      and `curr_cd` = #{currCd,jdbcType=VARCHAR}
  </update>
  <select id="selectByPage" parameterType="com.icpay.payment.db.dao.mybatis.model.MerAccountInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `tbl_mer_account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startNum != null and pageSize !=null ">
      limit #{startNum} , #{pageSize}
    </if>
  </select>
  <sql id="Example_Where_Clause1">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and t.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and t.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and t.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and t.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>