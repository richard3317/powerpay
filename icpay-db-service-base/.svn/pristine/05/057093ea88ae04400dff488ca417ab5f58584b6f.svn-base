package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_batch_exec_log

 *
 * @mbg.generated
 */
public class BatchExecLog implements Serializable {
    /**
     * Database column : tbl_batch_exec_log.log_id
     *
     * @mbg.generated
     */
    private String logId;

    /**
     * Database column : tbl_batch_exec_log.batch_no
     *
     * @mbg.generated
     */
    private Integer batchNo;

    /**
     * Database column : tbl_batch_exec_log.batch_detail
     *
     * @mbg.generated
     */
    private String batchDetail;

    /**
     * Database column : tbl_batch_exec_log.running_mode
     *
     * @mbg.generated
     */
    private String runningMode;

    /**
     * Database column : tbl_batch_exec_log.batch_dt
     *
     * @mbg.generated
     */
    private String batchDt;

    /**
     * Database column : tbl_batch_exec_log.running_dt
     *
     * @mbg.generated
     */
    private String runningDt;

    /**
     * Database column : tbl_batch_exec_log.start_tm
     *
     * @mbg.generated
     */
    private String startTm;

    /**
     * Database column : tbl_batch_exec_log.end_tm
     *
     * @mbg.generated
     */
    private String endTm;

    /**
     * Database column : tbl_batch_exec_log.status
     *
     * @mbg.generated
     */
    private String status;

    /**
     * Database column : tbl_batch_exec_log.exec_msg
     *
     * @mbg.generated
     */
    private String execMsg;

    /**
     * Database column : tbl_batch_exec_log.rec_crt_ts
     *
     * @mbg.generated
     */
    private Date recCrtTs;

    /**
     * Database column : tbl_batch_exec_log.rec_upd_ts
     *
     * @mbg.generated
     */
    private Date recUpdTs;

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    public BatchExecLog(String logId, Integer batchNo, String batchDetail, String runningMode, String batchDt, String runningDt, String startTm, String endTm, String status, String execMsg, Date recCrtTs, Date recUpdTs) {
        this.logId = logId;
        this.batchNo = batchNo;
        this.batchDetail = batchDetail;
        this.runningMode = runningMode;
        this.batchDt = batchDt;
        this.runningDt = runningDt;
        this.startTm = startTm;
        this.endTm = endTm;
        this.status = status;
        this.execMsg = execMsg;
        this.recCrtTs = recCrtTs;
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    public BatchExecLog() {
        super();
    }

    /**
     * @return log_id 
     *
     * @mbg.generated
     */
    public String getLogId() {
        return logId;
    }

    /**
     * @param logId 
     *
     * @mbg.generated
     */
    public void setLogId(String logId) {
        this.logId = logId;
    }

    /**
     * @return batch_no 
     *
     * @mbg.generated
     */
    public Integer getBatchNo() {
        return batchNo;
    }

    /**
     * @param batchNo 
     *
     * @mbg.generated
     */
    public void setBatchNo(Integer batchNo) {
        this.batchNo = batchNo;
    }

    /**
     * @return batch_detail 
     *
     * @mbg.generated
     */
    public String getBatchDetail() {
        return batchDetail;
    }

    /**
     * @param batchDetail 
     *
     * @mbg.generated
     */
    public void setBatchDetail(String batchDetail) {
        this.batchDetail = batchDetail;
    }

    /**
     * @return running_mode 
     *
     * @mbg.generated
     */
    public String getRunningMode() {
        return runningMode;
    }

    /**
     * @param runningMode 
     *
     * @mbg.generated
     */
    public void setRunningMode(String runningMode) {
        this.runningMode = runningMode;
    }

    /**
     * @return batch_dt 
     *
     * @mbg.generated
     */
    public String getBatchDt() {
        return batchDt;
    }

    /**
     * @param batchDt 
     *
     * @mbg.generated
     */
    public void setBatchDt(String batchDt) {
        this.batchDt = batchDt;
    }

    /**
     * @return running_dt 
     *
     * @mbg.generated
     */
    public String getRunningDt() {
        return runningDt;
    }

    /**
     * @param runningDt 
     *
     * @mbg.generated
     */
    public void setRunningDt(String runningDt) {
        this.runningDt = runningDt;
    }

    /**
     * @return start_tm 
     *
     * @mbg.generated
     */
    public String getStartTm() {
        return startTm;
    }

    /**
     * @param startTm 
     *
     * @mbg.generated
     */
    public void setStartTm(String startTm) {
        this.startTm = startTm;
    }

    /**
     * @return end_tm 
     *
     * @mbg.generated
     */
    public String getEndTm() {
        return endTm;
    }

    /**
     * @param endTm 
     *
     * @mbg.generated
     */
    public void setEndTm(String endTm) {
        this.endTm = endTm;
    }

    /**
     * @return status 
     *
     * @mbg.generated
     */
    public String getStatus() {
        return status;
    }

    /**
     * @param status 
     *
     * @mbg.generated
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * @return exec_msg 
     *
     * @mbg.generated
     */
    public String getExecMsg() {
        return execMsg;
    }

    /**
     * @param execMsg 
     *
     * @mbg.generated
     */
    public void setExecMsg(String execMsg) {
        this.execMsg = execMsg;
    }

    /**
     * @return rec_crt_ts 
     *
     * @mbg.generated
     */
    public Date getRecCrtTs() {
        return recCrtTs;
    }

    /**
     * @param recCrtTs 
     *
     * @mbg.generated
     */
    public void setRecCrtTs(Date recCrtTs) {
        this.recCrtTs = recCrtTs;
    }

    /**
     * @return rec_upd_ts 
     *
     * @mbg.generated
     */
    public Date getRecUpdTs() {
        return recUpdTs;
    }

    /**
     * @param recUpdTs 
     *
     * @mbg.generated
     */
    public void setRecUpdTs(Date recUpdTs) {
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        BatchExecLog other = (BatchExecLog) that;
        return (this.getLogId() == null ? other.getLogId() == null : this.getLogId().equals(other.getLogId()))
            && (this.getBatchNo() == null ? other.getBatchNo() == null : this.getBatchNo().equals(other.getBatchNo()))
            && (this.getBatchDetail() == null ? other.getBatchDetail() == null : this.getBatchDetail().equals(other.getBatchDetail()))
            && (this.getRunningMode() == null ? other.getRunningMode() == null : this.getRunningMode().equals(other.getRunningMode()))
            && (this.getBatchDt() == null ? other.getBatchDt() == null : this.getBatchDt().equals(other.getBatchDt()))
            && (this.getRunningDt() == null ? other.getRunningDt() == null : this.getRunningDt().equals(other.getRunningDt()))
            && (this.getStartTm() == null ? other.getStartTm() == null : this.getStartTm().equals(other.getStartTm()))
            && (this.getEndTm() == null ? other.getEndTm() == null : this.getEndTm().equals(other.getEndTm()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getExecMsg() == null ? other.getExecMsg() == null : this.getExecMsg().equals(other.getExecMsg()))
            && (this.getRecCrtTs() == null ? other.getRecCrtTs() == null : this.getRecCrtTs().equals(other.getRecCrtTs()))
            && (this.getRecUpdTs() == null ? other.getRecUpdTs() == null : this.getRecUpdTs().equals(other.getRecUpdTs()));
    }

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getLogId() == null) ? 0 : getLogId().hashCode());
        result = prime * result + ((getBatchNo() == null) ? 0 : getBatchNo().hashCode());
        result = prime * result + ((getBatchDetail() == null) ? 0 : getBatchDetail().hashCode());
        result = prime * result + ((getRunningMode() == null) ? 0 : getRunningMode().hashCode());
        result = prime * result + ((getBatchDt() == null) ? 0 : getBatchDt().hashCode());
        result = prime * result + ((getRunningDt() == null) ? 0 : getRunningDt().hashCode());
        result = prime * result + ((getStartTm() == null) ? 0 : getStartTm().hashCode());
        result = prime * result + ((getEndTm() == null) ? 0 : getEndTm().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getExecMsg() == null) ? 0 : getExecMsg().hashCode());
        result = prime * result + ((getRecCrtTs() == null) ? 0 : getRecCrtTs().hashCode());
        result = prime * result + ((getRecUpdTs() == null) ? 0 : getRecUpdTs().hashCode());
        return result;
    }

    /**
     * Database table : tbl_batch_exec_log
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(", logId=").append(logId);
        sb.append(", batchNo=").append(batchNo);
        sb.append(", batchDetail=").append(batchDetail);
        sb.append(", runningMode=").append(runningMode);
        sb.append(", batchDt=").append(batchDt);
        sb.append(", runningDt=").append(runningDt);
        sb.append(", startTm=").append(startTm);
        sb.append(", endTm=").append(endTm);
        sb.append(", status=").append(status);
        sb.append(", execMsg=").append(execMsg);
        sb.append(", recCrtTs=").append(recCrtTs);
        sb.append(", recUpdTs=").append(recUpdTs);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(BatchExecLog source) {
        this.logId=source.logId;
        this.batchNo=source.batchNo;
        this.batchDetail=source.batchDetail;
        this.runningMode=source.runningMode;
        this.batchDt=source.batchDt;
        this.runningDt=source.runningDt;
        this.startTm=source.startTm;
        this.endTm=source.endTm;
        this.status=source.status;
        this.execMsg=source.execMsg;
        this.recCrtTs=source.recCrtTs;
        this.recUpdTs=source.recUpdTs;
    }
}