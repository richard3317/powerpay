package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_page_config

 *
 * @mbg.generated
 */
public class PageConfig extends PageConfigKey implements Serializable {
    /**
     * 属性名称
     * Database column : tbl_page_config.field_nm
     *
     * @mbg.generated
     */
    private String fieldNm;

    /**
     * 显示宽度
     * Database column : tbl_page_config.display_width
     *
     * @mbg.generated
     */
    private Integer displayWidth;

    /**
     * 对齐方式： left, right, center
     * Database column : tbl_page_config.align
     *
     * @mbg.generated
     */
    private String align;

    /**
     * 第一位数设定是否显示结果列表，第二位数设定是否显示明细(0=不显示,1=显示)
     * Database column : tbl_page_config.display_config
     *
     * @mbg.generated
     */
    private String displayConfig;

    /**
     * 显示顺序
     * Database column : tbl_page_config.display_idx
     *
     * @mbg.generated
     */
    private Integer displayIdx;

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    public PageConfig(String entityNm, String field, String fieldNm, Integer displayWidth, String align, String displayConfig, Integer displayIdx) {
        super(entityNm, field);
        this.fieldNm = fieldNm;
        this.displayWidth = displayWidth;
        this.align = align;
        this.displayConfig = displayConfig;
        this.displayIdx = displayIdx;
    }

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    public PageConfig() {
        super();
    }

    /**
     * 属性名称
     * @return field_nm 属性名称
     *
     * @mbg.generated
     */
    public String getFieldNm() {
        return fieldNm;
    }

    /**
     * 属性名称
     * @param fieldNm 属性名称
     *
     * @mbg.generated
     */
    public void setFieldNm(String fieldNm) {
        this.fieldNm = fieldNm;
    }

    /**
     * 显示宽度
     * @return display_width 显示宽度
     *
     * @mbg.generated
     */
    public Integer getDisplayWidth() {
        return displayWidth;
    }

    /**
     * 显示宽度
     * @param displayWidth 显示宽度
     *
     * @mbg.generated
     */
    public void setDisplayWidth(Integer displayWidth) {
        this.displayWidth = displayWidth;
    }

    /**
     * 对齐方式： left, right, center
     * @return align 对齐方式： left, right, center
     *
     * @mbg.generated
     */
    public String getAlign() {
        return align;
    }

    /**
     * 对齐方式： left, right, center
     * @param align 对齐方式： left, right, center
     *
     * @mbg.generated
     */
    public void setAlign(String align) {
        this.align = align;
    }

    /**
     * 第一位数设定是否显示结果列表，第二位数设定是否显示明细(0=不显示,1=显示)
     * @return display_config 第一位数设定是否显示结果列表，第二位数设定是否显示明细(0=不显示,1=显示)
     *
     * @mbg.generated
     */
    public String getDisplayConfig() {
        return displayConfig;
    }

    /**
     * 第一位数设定是否显示结果列表，第二位数设定是否显示明细(0=不显示,1=显示)
     * @param displayConfig 第一位数设定是否显示结果列表，第二位数设定是否显示明细(0=不显示,1=显示)
     *
     * @mbg.generated
     */
    public void setDisplayConfig(String displayConfig) {
        this.displayConfig = displayConfig;
    }

    /**
     * 显示顺序
     * @return display_idx 显示顺序
     *
     * @mbg.generated
     */
    public Integer getDisplayIdx() {
        return displayIdx;
    }

    /**
     * 显示顺序
     * @param displayIdx 显示顺序
     *
     * @mbg.generated
     */
    public void setDisplayIdx(Integer displayIdx) {
        this.displayIdx = displayIdx;
    }

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        PageConfig other = (PageConfig) that;
        return (this.getEntityNm() == null ? other.getEntityNm() == null : this.getEntityNm().equals(other.getEntityNm()))
            && (this.getField() == null ? other.getField() == null : this.getField().equals(other.getField()))
            && (this.getFieldNm() == null ? other.getFieldNm() == null : this.getFieldNm().equals(other.getFieldNm()))
            && (this.getDisplayWidth() == null ? other.getDisplayWidth() == null : this.getDisplayWidth().equals(other.getDisplayWidth()))
            && (this.getAlign() == null ? other.getAlign() == null : this.getAlign().equals(other.getAlign()))
            && (this.getDisplayConfig() == null ? other.getDisplayConfig() == null : this.getDisplayConfig().equals(other.getDisplayConfig()))
            && (this.getDisplayIdx() == null ? other.getDisplayIdx() == null : this.getDisplayIdx().equals(other.getDisplayIdx()));
    }

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getEntityNm() == null) ? 0 : getEntityNm().hashCode());
        result = prime * result + ((getField() == null) ? 0 : getField().hashCode());
        result = prime * result + ((getFieldNm() == null) ? 0 : getFieldNm().hashCode());
        result = prime * result + ((getDisplayWidth() == null) ? 0 : getDisplayWidth().hashCode());
        result = prime * result + ((getAlign() == null) ? 0 : getAlign().hashCode());
        result = prime * result + ((getDisplayConfig() == null) ? 0 : getDisplayConfig().hashCode());
        result = prime * result + ((getDisplayIdx() == null) ? 0 : getDisplayIdx().hashCode());
        return result;
    }

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", fieldNm=").append(fieldNm);
        sb.append(", displayWidth=").append(displayWidth);
        sb.append(", align=").append(align);
        sb.append(", displayConfig=").append(displayConfig);
        sb.append(", displayIdx=").append(displayIdx);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_page_config
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(PageConfig source) {
        super.cloneFrom(source);
        this.fieldNm=source.fieldNm;
        this.displayWidth=source.displayWidth;
        this.align=source.align;
        this.displayConfig=source.displayConfig;
        this.displayIdx=source.displayIdx;
    }
}