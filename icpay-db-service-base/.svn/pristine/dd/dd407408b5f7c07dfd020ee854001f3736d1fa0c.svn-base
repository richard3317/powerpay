package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_code_msgs

 *
 * @mbg.generated
 */
public class CodeMsgs extends CodeMsgsKey implements Serializable {
    /**
     * 前端显示的错误代码
     * Database column : tbl_code_msgs.codeFront
     *
     * @mbg.generated
     */
    private String codefront;

    /**
     * 前端显示的错误信息，若讯息以带头"[!]"则表示保留原始错误讯息，此讯息仅为默认讯息。
     * Database column : tbl_code_msgs.message
     *
     * @mbg.generated
     */
    private String message;

    /**
     * 备注
     * Database column : tbl_code_msgs.memo
     *
     * @mbg.generated
     */
    private String memo;

    /**
     * Database column : tbl_code_msgs.rec_crt_ts
     *
     * @mbg.generated
     */
    private Date recCrtTs;

    /**
     * Database column : tbl_code_msgs.rec_upd_ts
     *
     * @mbg.generated
     */
    private Date recUpdTs;

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    public CodeMsgs(String category, String lang, String code, String codefront, String message, String memo, Date recCrtTs, Date recUpdTs) {
        super(category, lang, code);
        this.codefront = codefront;
        this.message = message;
        this.memo = memo;
        this.recCrtTs = recCrtTs;
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    public CodeMsgs() {
        super();
    }

    /**
     * 前端显示的错误代码
     * @return codeFront 前端显示的错误代码
     *
     * @mbg.generated
     */
    public String getCodefront() {
        return codefront;
    }

    /**
     * 前端显示的错误代码
     * @param codefront 前端显示的错误代码
     *
     * @mbg.generated
     */
    public void setCodefront(String codefront) {
        this.codefront = codefront;
    }

    /**
     * 前端显示的错误信息，若讯息以带头"[!]"则表示保留原始错误讯息，此讯息仅为默认讯息。
     * @return message 前端显示的错误信息，若讯息以带头"[!]"则表示保留原始错误讯息，此讯息仅为默认讯息。
     *
     * @mbg.generated
     */
    public String getMessage() {
        return message;
    }

    /**
     * 前端显示的错误信息，若讯息以带头"[!]"则表示保留原始错误讯息，此讯息仅为默认讯息。
     * @param message 前端显示的错误信息，若讯息以带头"[!]"则表示保留原始错误讯息，此讯息仅为默认讯息。
     *
     * @mbg.generated
     */
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * 备注
     * @return memo 备注
     *
     * @mbg.generated
     */
    public String getMemo() {
        return memo;
    }

    /**
     * 备注
     * @param memo 备注
     *
     * @mbg.generated
     */
    public void setMemo(String memo) {
        this.memo = memo;
    }

    /**
     * @return rec_crt_ts 
     *
     * @mbg.generated
     */
    public Date getRecCrtTs() {
        return recCrtTs;
    }

    /**
     * @param recCrtTs 
     *
     * @mbg.generated
     */
    public void setRecCrtTs(Date recCrtTs) {
        this.recCrtTs = recCrtTs;
    }

    /**
     * @return rec_upd_ts 
     *
     * @mbg.generated
     */
    public Date getRecUpdTs() {
        return recUpdTs;
    }

    /**
     * @param recUpdTs 
     *
     * @mbg.generated
     */
    public void setRecUpdTs(Date recUpdTs) {
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        CodeMsgs other = (CodeMsgs) that;
        return (this.getCategory() == null ? other.getCategory() == null : this.getCategory().equals(other.getCategory()))
            && (this.getLang() == null ? other.getLang() == null : this.getLang().equals(other.getLang()))
            && (this.getCode() == null ? other.getCode() == null : this.getCode().equals(other.getCode()))
            && (this.getCodefront() == null ? other.getCodefront() == null : this.getCodefront().equals(other.getCodefront()))
            && (this.getMessage() == null ? other.getMessage() == null : this.getMessage().equals(other.getMessage()))
            && (this.getMemo() == null ? other.getMemo() == null : this.getMemo().equals(other.getMemo()))
            && (this.getRecCrtTs() == null ? other.getRecCrtTs() == null : this.getRecCrtTs().equals(other.getRecCrtTs()))
            && (this.getRecUpdTs() == null ? other.getRecUpdTs() == null : this.getRecUpdTs().equals(other.getRecUpdTs()));
    }

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCategory() == null) ? 0 : getCategory().hashCode());
        result = prime * result + ((getLang() == null) ? 0 : getLang().hashCode());
        result = prime * result + ((getCode() == null) ? 0 : getCode().hashCode());
        result = prime * result + ((getCodefront() == null) ? 0 : getCodefront().hashCode());
        result = prime * result + ((getMessage() == null) ? 0 : getMessage().hashCode());
        result = prime * result + ((getMemo() == null) ? 0 : getMemo().hashCode());
        result = prime * result + ((getRecCrtTs() == null) ? 0 : getRecCrtTs().hashCode());
        result = prime * result + ((getRecUpdTs() == null) ? 0 : getRecUpdTs().hashCode());
        return result;
    }

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", codefront=").append(codefront);
        sb.append(", message=").append(message);
        sb.append(", memo=").append(memo);
        sb.append(", recCrtTs=").append(recCrtTs);
        sb.append(", recUpdTs=").append(recUpdTs);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_code_msgs
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(CodeMsgs source) {
        super.cloneFrom(source);
        this.codefront=source.codefront;
        this.message=source.message;
        this.memo=source.memo;
        this.recCrtTs=source.recCrtTs;
        this.recUpdTs=source.recUpdTs;
    }
}