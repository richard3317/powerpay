package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_exchange_rate

 *
 * @mbg.generated
 */
public class ExchangeRate extends ExchangeRateKey implements Serializable {
    /**
     * 原始金额
     * Database column : tbl_exchange_rate.amount
     *
     * @mbg.generated
     */
    private BigDecimal amount;

    /**
     * 原始金额单位
     * Database column : tbl_exchange_rate.unit
     *
     * @mbg.generated
     */
    private BigDecimal unit;

    /**
     * 目标金额
     * Database column : tbl_exchange_rate.amount_target
     *
     * @mbg.generated
     */
    private BigDecimal amountTarget;

    /**
     * 目标金额单位
     * Database column : tbl_exchange_rate.unit_target
     *
     * @mbg.generated
     */
    private BigDecimal unitTarget;

    /**
     * 销售转换率（卖给客户时会乘上此比率，目前保留暂未使用固定为1.0）
     * Database column : tbl_exchange_rate.sale_rate
     *
     * @mbg.generated
     */
    private BigDecimal saleRate;

    /**
     * 1=有效,0=无效
     * Database column : tbl_exchange_rate.valid
     *
     * @mbg.generated
     */
    private Integer valid;

    /**
     * 排序用，由小至大
     * Database column : tbl_exchange_rate.sort_seq
     *
     * @mbg.generated
     */
    private Integer sortSeq;

    /**
     * 备注
     * Database column : tbl_exchange_rate.comment
     *
     * @mbg.generated
     */
    private String comment;

    /**
     * 标签
     * Database column : tbl_exchange_rate.tags
     *
     * @mbg.generated
     */
    private String tags;

    /**
     * Database column : tbl_exchange_rate.rec_crt_ts
     *
     * @mbg.generated
     */
    private Date recCrtTs;

    /**
     * Database column : tbl_exchange_rate.rec_upd_ts
     *
     * @mbg.generated
     */
    private Date recUpdTs;

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    public ExchangeRate(String cat, String intTransCd, String currency, String currencyTarget, BigDecimal amount, BigDecimal unit, BigDecimal amountTarget, BigDecimal unitTarget, BigDecimal saleRate, Integer valid, Integer sortSeq, String comment, String tags, Date recCrtTs, Date recUpdTs) {
        super(cat, intTransCd, currency, currencyTarget);
        this.amount = amount;
        this.unit = unit;
        this.amountTarget = amountTarget;
        this.unitTarget = unitTarget;
        this.saleRate = saleRate;
        this.valid = valid;
        this.sortSeq = sortSeq;
        this.comment = comment;
        this.tags = tags;
        this.recCrtTs = recCrtTs;
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    public ExchangeRate() {
        super();
    }

    /**
     * 原始金额
     * @return amount 原始金额
     *
     * @mbg.generated
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * 原始金额
     * @param amount 原始金额
     *
     * @mbg.generated
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    /**
     * 原始金额单位
     * @return unit 原始金额单位
     *
     * @mbg.generated
     */
    public BigDecimal getUnit() {
        return unit;
    }

    /**
     * 原始金额单位
     * @param unit 原始金额单位
     *
     * @mbg.generated
     */
    public void setUnit(BigDecimal unit) {
        this.unit = unit;
    }

    /**
     * 目标金额
     * @return amount_target 目标金额
     *
     * @mbg.generated
     */
    public BigDecimal getAmountTarget() {
        return amountTarget;
    }

    /**
     * 目标金额
     * @param amountTarget 目标金额
     *
     * @mbg.generated
     */
    public void setAmountTarget(BigDecimal amountTarget) {
        this.amountTarget = amountTarget;
    }

    /**
     * 目标金额单位
     * @return unit_target 目标金额单位
     *
     * @mbg.generated
     */
    public BigDecimal getUnitTarget() {
        return unitTarget;
    }

    /**
     * 目标金额单位
     * @param unitTarget 目标金额单位
     *
     * @mbg.generated
     */
    public void setUnitTarget(BigDecimal unitTarget) {
        this.unitTarget = unitTarget;
    }

    /**
     * 销售转换率（卖给客户时会乘上此比率，目前保留暂未使用固定为1.0）
     * @return sale_rate 销售转换率（卖给客户时会乘上此比率，目前保留暂未使用固定为1.0）
     *
     * @mbg.generated
     */
    public BigDecimal getSaleRate() {
        return saleRate;
    }

    /**
     * 销售转换率（卖给客户时会乘上此比率，目前保留暂未使用固定为1.0）
     * @param saleRate 销售转换率（卖给客户时会乘上此比率，目前保留暂未使用固定为1.0）
     *
     * @mbg.generated
     */
    public void setSaleRate(BigDecimal saleRate) {
        this.saleRate = saleRate;
    }

    /**
     * 1=有效,0=无效
     * @return valid 1=有效,0=无效
     *
     * @mbg.generated
     */
    public Integer getValid() {
        return valid;
    }

    /**
     * 1=有效,0=无效
     * @param valid 1=有效,0=无效
     *
     * @mbg.generated
     */
    public void setValid(Integer valid) {
        this.valid = valid;
    }

    /**
     * 排序用，由小至大
     * @return sort_seq 排序用，由小至大
     *
     * @mbg.generated
     */
    public Integer getSortSeq() {
        return sortSeq;
    }

    /**
     * 排序用，由小至大
     * @param sortSeq 排序用，由小至大
     *
     * @mbg.generated
     */
    public void setSortSeq(Integer sortSeq) {
        this.sortSeq = sortSeq;
    }

    /**
     * 备注
     * @return comment 备注
     *
     * @mbg.generated
     */
    public String getComment() {
        return comment;
    }

    /**
     * 备注
     * @param comment 备注
     *
     * @mbg.generated
     */
    public void setComment(String comment) {
        this.comment = comment;
    }

    /**
     * 标签
     * @return tags 标签
     *
     * @mbg.generated
     */
    public String getTags() {
        return tags;
    }

    /**
     * 标签
     * @param tags 标签
     *
     * @mbg.generated
     */
    public void setTags(String tags) {
        this.tags = tags;
    }

    /**
     * @return rec_crt_ts 
     *
     * @mbg.generated
     */
    public Date getRecCrtTs() {
        return recCrtTs;
    }

    /**
     * @param recCrtTs 
     *
     * @mbg.generated
     */
    public void setRecCrtTs(Date recCrtTs) {
        this.recCrtTs = recCrtTs;
    }

    /**
     * @return rec_upd_ts 
     *
     * @mbg.generated
     */
    public Date getRecUpdTs() {
        return recUpdTs;
    }

    /**
     * @param recUpdTs 
     *
     * @mbg.generated
     */
    public void setRecUpdTs(Date recUpdTs) {
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        ExchangeRate other = (ExchangeRate) that;
        return (this.getCat() == null ? other.getCat() == null : this.getCat().equals(other.getCat()))
            && (this.getIntTransCd() == null ? other.getIntTransCd() == null : this.getIntTransCd().equals(other.getIntTransCd()))
            && (this.getCurrency() == null ? other.getCurrency() == null : this.getCurrency().equals(other.getCurrency()))
            && (this.getCurrencyTarget() == null ? other.getCurrencyTarget() == null : this.getCurrencyTarget().equals(other.getCurrencyTarget()))
            && (this.getAmount() == null ? other.getAmount() == null : this.getAmount().equals(other.getAmount()))
            && (this.getUnit() == null ? other.getUnit() == null : this.getUnit().equals(other.getUnit()))
            && (this.getAmountTarget() == null ? other.getAmountTarget() == null : this.getAmountTarget().equals(other.getAmountTarget()))
            && (this.getUnitTarget() == null ? other.getUnitTarget() == null : this.getUnitTarget().equals(other.getUnitTarget()))
            && (this.getSaleRate() == null ? other.getSaleRate() == null : this.getSaleRate().equals(other.getSaleRate()))
            && (this.getValid() == null ? other.getValid() == null : this.getValid().equals(other.getValid()))
            && (this.getSortSeq() == null ? other.getSortSeq() == null : this.getSortSeq().equals(other.getSortSeq()))
            && (this.getComment() == null ? other.getComment() == null : this.getComment().equals(other.getComment()))
            && (this.getTags() == null ? other.getTags() == null : this.getTags().equals(other.getTags()))
            && (this.getRecCrtTs() == null ? other.getRecCrtTs() == null : this.getRecCrtTs().equals(other.getRecCrtTs()))
            && (this.getRecUpdTs() == null ? other.getRecUpdTs() == null : this.getRecUpdTs().equals(other.getRecUpdTs()));
    }

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCat() == null) ? 0 : getCat().hashCode());
        result = prime * result + ((getIntTransCd() == null) ? 0 : getIntTransCd().hashCode());
        result = prime * result + ((getCurrency() == null) ? 0 : getCurrency().hashCode());
        result = prime * result + ((getCurrencyTarget() == null) ? 0 : getCurrencyTarget().hashCode());
        result = prime * result + ((getAmount() == null) ? 0 : getAmount().hashCode());
        result = prime * result + ((getUnit() == null) ? 0 : getUnit().hashCode());
        result = prime * result + ((getAmountTarget() == null) ? 0 : getAmountTarget().hashCode());
        result = prime * result + ((getUnitTarget() == null) ? 0 : getUnitTarget().hashCode());
        result = prime * result + ((getSaleRate() == null) ? 0 : getSaleRate().hashCode());
        result = prime * result + ((getValid() == null) ? 0 : getValid().hashCode());
        result = prime * result + ((getSortSeq() == null) ? 0 : getSortSeq().hashCode());
        result = prime * result + ((getComment() == null) ? 0 : getComment().hashCode());
        result = prime * result + ((getTags() == null) ? 0 : getTags().hashCode());
        result = prime * result + ((getRecCrtTs() == null) ? 0 : getRecCrtTs().hashCode());
        result = prime * result + ((getRecUpdTs() == null) ? 0 : getRecUpdTs().hashCode());
        return result;
    }

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", amount=").append(amount);
        sb.append(", unit=").append(unit);
        sb.append(", amountTarget=").append(amountTarget);
        sb.append(", unitTarget=").append(unitTarget);
        sb.append(", saleRate=").append(saleRate);
        sb.append(", valid=").append(valid);
        sb.append(", sortSeq=").append(sortSeq);
        sb.append(", comment=").append(comment);
        sb.append(", tags=").append(tags);
        sb.append(", recCrtTs=").append(recCrtTs);
        sb.append(", recUpdTs=").append(recUpdTs);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_exchange_rate
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(ExchangeRate source) {
        super.cloneFrom(source);
        this.amount=source.amount;
        this.unit=source.unit;
        this.amountTarget=source.amountTarget;
        this.unitTarget=source.unitTarget;
        this.saleRate=source.saleRate;
        this.valid=source.valid;
        this.sortSeq=source.sortSeq;
        this.comment=source.comment;
        this.tags=source.tags;
        this.recCrtTs=source.recCrtTs;
        this.recUpdTs=source.recUpdTs;
    }
}