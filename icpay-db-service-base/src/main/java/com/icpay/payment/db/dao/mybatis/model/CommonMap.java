package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_common_map

 *
 * @mbg.generated
 */
public class CommonMap extends CommonMapKey implements Serializable {
    /**
     * Value
     * Database column : tbl_common_map.val
     *
     * @mbg.generated
     */
    private String val;

    /**
     * Type of value : {STR|INT|FLOAT|BOOL|JSON}
     * Database column : tbl_common_map.val_type
     *
     * @mbg.generated
     */
    private String valType;

    /**
     * JSON序列化之类名
     * Database column : tbl_common_map.val_class
     *
     * @mbg.generated
     */
    private String valClass;

    /**
     * Record insert time
     * Database column : tbl_common_map.ts_create
     *
     * @mbg.generated
     */
    private Date tsCreate;

    /**
     * Record update time
     * Database column : tbl_common_map.ts_update
     *
     * @mbg.generated
     */
    private Date tsUpdate;

    /**
     * Last ref time
     * Database column : tbl_common_map.ts_ref
     *
     * @mbg.generated
     */
    private Date tsRef;

    /**
     * Expired time in secs, 0=no_expire
     * Database column : tbl_common_map.expire_time
     *
     * @mbg.generated
     */
    private Integer expireTime;

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    public CommonMap(String category, String name, String val, String valType, String valClass, Date tsCreate, Date tsUpdate, Date tsRef, Integer expireTime) {
        super(category, name);
        this.val = val;
        this.valType = valType;
        this.valClass = valClass;
        this.tsCreate = tsCreate;
        this.tsUpdate = tsUpdate;
        this.tsRef = tsRef;
        this.expireTime = expireTime;
    }

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    public CommonMap() {
        super();
    }

    /**
     * Value
     * @return val Value
     *
     * @mbg.generated
     */
    public String getVal() {
        return val;
    }

    /**
     * Value
     * @param val Value
     *
     * @mbg.generated
     */
    public void setVal(String val) {
        this.val = val;
    }

    /**
     * Type of value : {STR|INT|FLOAT|BOOL|JSON}
     * @return val_type Type of value : {STR|INT|FLOAT|BOOL|JSON}
     *
     * @mbg.generated
     */
    public String getValType() {
        return valType;
    }

    /**
     * Type of value : {STR|INT|FLOAT|BOOL|JSON}
     * @param valType Type of value : {STR|INT|FLOAT|BOOL|JSON}
     *
     * @mbg.generated
     */
    public void setValType(String valType) {
        this.valType = valType;
    }

    /**
     * JSON序列化之类名
     * @return val_class JSON序列化之类名
     *
     * @mbg.generated
     */
    public String getValClass() {
        return valClass;
    }

    /**
     * JSON序列化之类名
     * @param valClass JSON序列化之类名
     *
     * @mbg.generated
     */
    public void setValClass(String valClass) {
        this.valClass = valClass;
    }

    /**
     * Record insert time
     * @return ts_create Record insert time
     *
     * @mbg.generated
     */
    public Date getTsCreate() {
        return tsCreate;
    }

    /**
     * Record insert time
     * @param tsCreate Record insert time
     *
     * @mbg.generated
     */
    public void setTsCreate(Date tsCreate) {
        this.tsCreate = tsCreate;
    }

    /**
     * Record update time
     * @return ts_update Record update time
     *
     * @mbg.generated
     */
    public Date getTsUpdate() {
        return tsUpdate;
    }

    /**
     * Record update time
     * @param tsUpdate Record update time
     *
     * @mbg.generated
     */
    public void setTsUpdate(Date tsUpdate) {
        this.tsUpdate = tsUpdate;
    }

    /**
     * Last ref time
     * @return ts_ref Last ref time
     *
     * @mbg.generated
     */
    public Date getTsRef() {
        return tsRef;
    }

    /**
     * Last ref time
     * @param tsRef Last ref time
     *
     * @mbg.generated
     */
    public void setTsRef(Date tsRef) {
        this.tsRef = tsRef;
    }

    /**
     * Expired time in secs, 0=no_expire
     * @return expire_time Expired time in secs, 0=no_expire
     *
     * @mbg.generated
     */
    public Integer getExpireTime() {
        return expireTime;
    }

    /**
     * Expired time in secs, 0=no_expire
     * @param expireTime Expired time in secs, 0=no_expire
     *
     * @mbg.generated
     */
    public void setExpireTime(Integer expireTime) {
        this.expireTime = expireTime;
    }

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        CommonMap other = (CommonMap) that;
        return (this.getCategory() == null ? other.getCategory() == null : this.getCategory().equals(other.getCategory()))
            && (this.getName() == null ? other.getName() == null : this.getName().equals(other.getName()))
            && (this.getVal() == null ? other.getVal() == null : this.getVal().equals(other.getVal()))
            && (this.getValType() == null ? other.getValType() == null : this.getValType().equals(other.getValType()))
            && (this.getValClass() == null ? other.getValClass() == null : this.getValClass().equals(other.getValClass()))
            && (this.getTsCreate() == null ? other.getTsCreate() == null : this.getTsCreate().equals(other.getTsCreate()))
            && (this.getTsUpdate() == null ? other.getTsUpdate() == null : this.getTsUpdate().equals(other.getTsUpdate()))
            && (this.getTsRef() == null ? other.getTsRef() == null : this.getTsRef().equals(other.getTsRef()))
            && (this.getExpireTime() == null ? other.getExpireTime() == null : this.getExpireTime().equals(other.getExpireTime()));
    }

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCategory() == null) ? 0 : getCategory().hashCode());
        result = prime * result + ((getName() == null) ? 0 : getName().hashCode());
        result = prime * result + ((getVal() == null) ? 0 : getVal().hashCode());
        result = prime * result + ((getValType() == null) ? 0 : getValType().hashCode());
        result = prime * result + ((getValClass() == null) ? 0 : getValClass().hashCode());
        result = prime * result + ((getTsCreate() == null) ? 0 : getTsCreate().hashCode());
        result = prime * result + ((getTsUpdate() == null) ? 0 : getTsUpdate().hashCode());
        result = prime * result + ((getTsRef() == null) ? 0 : getTsRef().hashCode());
        result = prime * result + ((getExpireTime() == null) ? 0 : getExpireTime().hashCode());
        return result;
    }

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", val=").append(val);
        sb.append(", valType=").append(valType);
        sb.append(", valClass=").append(valClass);
        sb.append(", tsCreate=").append(tsCreate);
        sb.append(", tsUpdate=").append(tsUpdate);
        sb.append(", tsRef=").append(tsRef);
        sb.append(", expireTime=").append(expireTime);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_common_map
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(CommonMap source) {
        super.cloneFrom(source);
        this.val=source.val;
        this.valType=source.valType;
        this.valClass=source.valClass;
        this.tsCreate=source.tsCreate;
        this.tsUpdate=source.tsUpdate;
        this.tsRef=source.tsRef;
        this.expireTime=source.expireTime;
    }
}