package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_vacc_flow_cat

 *
 * @mbg.generated
 */
public class VaccFlowCat extends VaccFlowCatKey implements Serializable {
    /**
     * 科目类型(0001=转帐/0002=收入/0003=支出)
     * Database column : tbl_vacc_flow_cat.cat_type
     *
     * @mbg.generated
     */
    private String catType;

    /**
     * 名称
     * Database column : tbl_vacc_flow_cat.cat_name
     *
     * @mbg.generated
     */
    private String catName;

    /**
     * 说明
     * Database column : tbl_vacc_flow_cat.memo
     *
     * @mbg.generated
     */
    private String memo;

    /**
     * Database column : tbl_vacc_flow_cat.rec_crt_ts
     *
     * @mbg.generated
     */
    private Date recCrtTs;

    /**
     * Database column : tbl_vacc_flow_cat.rec_upd_ts
     *
     * @mbg.generated
     */
    private Date recUpdTs;

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    public VaccFlowCat(String book, String catalog, String catType, String catName, String memo, Date recCrtTs, Date recUpdTs) {
        super(book, catalog);
        this.catType = catType;
        this.catName = catName;
        this.memo = memo;
        this.recCrtTs = recCrtTs;
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    public VaccFlowCat() {
        super();
    }

    /**
     * 科目类型(0001=转帐/0002=收入/0003=支出)
     * @return cat_type 科目类型(0001=转帐/0002=收入/0003=支出)
     *
     * @mbg.generated
     */
    public String getCatType() {
        return catType;
    }

    /**
     * 科目类型(0001=转帐/0002=收入/0003=支出)
     * @param catType 科目类型(0001=转帐/0002=收入/0003=支出)
     *
     * @mbg.generated
     */
    public void setCatType(String catType) {
        this.catType = catType;
    }

    /**
     * 名称
     * @return cat_name 名称
     *
     * @mbg.generated
     */
    public String getCatName() {
        return catName;
    }

    /**
     * 名称
     * @param catName 名称
     *
     * @mbg.generated
     */
    public void setCatName(String catName) {
        this.catName = catName;
    }

    /**
     * 说明
     * @return memo 说明
     *
     * @mbg.generated
     */
    public String getMemo() {
        return memo;
    }

    /**
     * 说明
     * @param memo 说明
     *
     * @mbg.generated
     */
    public void setMemo(String memo) {
        this.memo = memo;
    }

    /**
     * @return rec_crt_ts 
     *
     * @mbg.generated
     */
    public Date getRecCrtTs() {
        return recCrtTs;
    }

    /**
     * @param recCrtTs 
     *
     * @mbg.generated
     */
    public void setRecCrtTs(Date recCrtTs) {
        this.recCrtTs = recCrtTs;
    }

    /**
     * @return rec_upd_ts 
     *
     * @mbg.generated
     */
    public Date getRecUpdTs() {
        return recUpdTs;
    }

    /**
     * @param recUpdTs 
     *
     * @mbg.generated
     */
    public void setRecUpdTs(Date recUpdTs) {
        this.recUpdTs = recUpdTs;
    }

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        VaccFlowCat other = (VaccFlowCat) that;
        return (this.getBook() == null ? other.getBook() == null : this.getBook().equals(other.getBook()))
            && (this.getCatalog() == null ? other.getCatalog() == null : this.getCatalog().equals(other.getCatalog()))
            && (this.getCatType() == null ? other.getCatType() == null : this.getCatType().equals(other.getCatType()))
            && (this.getCatName() == null ? other.getCatName() == null : this.getCatName().equals(other.getCatName()))
            && (this.getMemo() == null ? other.getMemo() == null : this.getMemo().equals(other.getMemo()))
            && (this.getRecCrtTs() == null ? other.getRecCrtTs() == null : this.getRecCrtTs().equals(other.getRecCrtTs()))
            && (this.getRecUpdTs() == null ? other.getRecUpdTs() == null : this.getRecUpdTs().equals(other.getRecUpdTs()));
    }

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getBook() == null) ? 0 : getBook().hashCode());
        result = prime * result + ((getCatalog() == null) ? 0 : getCatalog().hashCode());
        result = prime * result + ((getCatType() == null) ? 0 : getCatType().hashCode());
        result = prime * result + ((getCatName() == null) ? 0 : getCatName().hashCode());
        result = prime * result + ((getMemo() == null) ? 0 : getMemo().hashCode());
        result = prime * result + ((getRecCrtTs() == null) ? 0 : getRecCrtTs().hashCode());
        result = prime * result + ((getRecUpdTs() == null) ? 0 : getRecUpdTs().hashCode());
        return result;
    }

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", catType=").append(catType);
        sb.append(", catName=").append(catName);
        sb.append(", memo=").append(memo);
        sb.append(", recCrtTs=").append(recCrtTs);
        sb.append(", recUpdTs=").append(recUpdTs);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_vacc_flow_cat
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(VaccFlowCat source) {
        super.cloneFrom(source);
        this.catType=source.catType;
        this.catName=source.catName;
        this.memo=source.memo;
        this.recCrtTs=source.recCrtTs;
        this.recUpdTs=source.recUpdTs;
    }
}