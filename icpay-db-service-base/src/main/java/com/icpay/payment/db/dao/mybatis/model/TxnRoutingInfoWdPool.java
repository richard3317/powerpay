package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : view_txn_routing_info_wd_pool
 * @author user
 *
 * @mbg.generated
 */
public class TxnRoutingInfoWdPool implements Serializable {
    /**
     * 交易类型(0010=消费/支付交易，5210=代付交易)
     * Database column : view_txn_routing_info_wd_pool.int_trans_cd
     *
     * @mbg.generated
     */
    private String intTransCd;

    /**
     * 前端商户号
     * Database column : view_txn_routing_info_wd_pool.mchnt_cd
     *
     * @mbg.generated
     */
    private String mchntCd;

    /**
     * 渠道编号
     * Database column : view_txn_routing_info_wd_pool.chnl_id
     *
     * @mbg.generated
     */
    private String chnlId;

    /**
     * 渠道商户号
     * Database column : view_txn_routing_info_wd_pool.chnl_mchnt_cd
     *
     * @mbg.generated
     */
    private String chnlMchntCd;

    /**
     * 币别
     * Database column : view_txn_routing_info_wd_pool.curr_cd
     *
     * @mbg.generated
     */
    private String currCd;

    /**
     * Database column : view_txn_routing_info_wd_pool.priority
     *
     * @mbg.generated
     */
    private Integer priority;

    /**
     * 权重，数字越大机率越高
     * Database column : view_txn_routing_info_wd_pool.weight
     *
     * @mbg.generated
     */
    private Integer weight;

    /**
     * 状态(1=有效，0-无效)
     * Database column : view_txn_routing_info_wd_pool.route_status
     *
     * @mbg.generated
     */
    private String routeStatus;

    /**
     * 单笔最低金额限制(单位：分)
     * Database column : view_txn_routing_info_wd_pool.tx_amt_min
     *
     * @mbg.generated
     */
    private String txAmtMin;

    /**
     * 单笔最大限额(单位：分)
     * Database column : view_txn_routing_info_wd_pool.tx_amt_max
     *
     * @mbg.generated
     */
    private String txAmtMax;

    /**
     * 交易时段限制，例："ALL" 或 "0800-1200,1400-2000"
     * Database column : view_txn_routing_info_wd_pool.tx_time_limit
     *
     * @mbg.generated
     */
    private String txTimeLimit;

    /**
     * 当日交易累计限额(单位：分)
     * Database column : view_txn_routing_info_wd_pool.tx_day_max
     *
     * @mbg.generated
     */
    private String txDayMax;

    /**
     * 单卡当日累计限額(单位：分)
     * Database column : view_txn_routing_info_wd_pool.tx_card_day_max
     *
     * @mbg.generated
     */
    private String txCardDayMax;

    /**
     * 可代付馀额
     * Database column : view_txn_routing_info_wd_pool.available_balance
     *
     * @mbg.generated
     */
    private Long availableBalance;

    /**
     * 保留余额
     * Database column : view_txn_routing_info_wd_pool.obligated_balance
     *
     * @mbg.generated
     */
    private Long obligatedBalance;

    /**
     * 不可代付馀额(T1馀额)
     * Database column : view_txn_routing_info_wd_pool.frozen_t1_balance
     *
     * @mbg.generated
     */
    private Long frozenT1Balance;

    /**
     * 冻结款
     * Database column : view_txn_routing_info_wd_pool.frozen_balance
     *
     * @mbg.generated
     */
    private Long frozenBalance;

    /**
     * 状态：0=无效, 1=有效,2=锁定
     * Database column : view_txn_routing_info_wd_pool.account_state
     *
     * @mbg.generated
     */
    private String accountState;

    /**
     * 当日累计交易额(收入)
     * Database column : view_txn_routing_info_wd_pool.dayTxnAmt
     *
     * @mbg.generated
     */
    private Long daytxnamt;

    /**
     * 当日累计交易手续费
     * Database column : view_txn_routing_info_wd_pool.dayTxnFee
     *
     * @mbg.generated
     */
    private Long daytxnfee;

    /**
     * 当日累计交易笔数
     * Database column : view_txn_routing_info_wd_pool.dayTxnCount
     *
     * @mbg.generated
     */
    private Integer daytxncount;

    /**
     * 当日累计提现金额(支出)
     * Database column : view_txn_routing_info_wd_pool.dayWithdrawAmt
     *
     * @mbg.generated
     */
    private Long daywithdrawamt;

    /**
     * 当日累计提现手续费
     * Database column : view_txn_routing_info_wd_pool.dayWithdrawFee
     *
     * @mbg.generated
     */
    private Long daywithdrawfee;

    /**
     * 当日累计提现笔数
     * Database column : view_txn_routing_info_wd_pool.dayWithdrawCount
     *
     * @mbg.generated
     */
    private Integer daywithdrawcount;

    /**
     * 金額表示單位 = 0.01
     * Database column : view_txn_routing_info_wd_pool.unit
     *
     * @mbg.generated
     */
    private BigDecimal unit;

    /**
     * 扩展标签
     * Database column : view_txn_routing_info_wd_pool.tags
     *
     * @mbg.generated
     */
    private String tags;

    /**
     * Database column : view_txn_routing_info_wd_pool.sel_bank_num
     *
     * @mbg.generated
     */
    private String selBankNum;

    /**
     * Database column : view_txn_routing_info_wd_pool.sel_bank_name
     *
     * @mbg.generated
     */
    private String selBankName;

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    public TxnRoutingInfoWdPool(String intTransCd, String mchntCd, String chnlId, String chnlMchntCd, String currCd, Integer priority, Integer weight, String routeStatus, String txAmtMin, String txAmtMax, String txTimeLimit, String txDayMax, String txCardDayMax, Long availableBalance, Long obligatedBalance, Long frozenT1Balance, Long frozenBalance, String accountState, Long daytxnamt, Long daytxnfee, Integer daytxncount, Long daywithdrawamt, Long daywithdrawfee, Integer daywithdrawcount, BigDecimal unit, String tags, String selBankNum, String selBankName) {
        this.intTransCd = intTransCd;
        this.mchntCd = mchntCd;
        this.chnlId = chnlId;
        this.chnlMchntCd = chnlMchntCd;
        this.currCd = currCd;
        this.priority = priority;
        this.weight = weight;
        this.routeStatus = routeStatus;
        this.txAmtMin = txAmtMin;
        this.txAmtMax = txAmtMax;
        this.txTimeLimit = txTimeLimit;
        this.txDayMax = txDayMax;
        this.txCardDayMax = txCardDayMax;
        this.availableBalance = availableBalance;
        this.obligatedBalance = obligatedBalance;
        this.frozenT1Balance = frozenT1Balance;
        this.frozenBalance = frozenBalance;
        this.accountState = accountState;
        this.daytxnamt = daytxnamt;
        this.daytxnfee = daytxnfee;
        this.daytxncount = daytxncount;
        this.daywithdrawamt = daywithdrawamt;
        this.daywithdrawfee = daywithdrawfee;
        this.daywithdrawcount = daywithdrawcount;
        this.unit = unit;
        this.tags = tags;
        this.selBankNum = selBankNum;
        this.selBankName = selBankName;
    }

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    public TxnRoutingInfoWdPool() {
        super();
    }

    /**
     * 交易类型(0010=消费/支付交易，5210=代付交易)
     * @return int_trans_cd 交易类型(0010=消费/支付交易，5210=代付交易)
     *
     * @mbg.generated
     */
    public String getIntTransCd() {
        return intTransCd;
    }

    /**
     * 交易类型(0010=消费/支付交易，5210=代付交易)
     * @param intTransCd 交易类型(0010=消费/支付交易，5210=代付交易)
     *
     * @mbg.generated
     */
    public void setIntTransCd(String intTransCd) {
        this.intTransCd = intTransCd;
    }

    /**
     * 前端商户号
     * @return mchnt_cd 前端商户号
     *
     * @mbg.generated
     */
    public String getMchntCd() {
        return mchntCd;
    }

    /**
     * 前端商户号
     * @param mchntCd 前端商户号
     *
     * @mbg.generated
     */
    public void setMchntCd(String mchntCd) {
        this.mchntCd = mchntCd;
    }

    /**
     * 渠道编号
     * @return chnl_id 渠道编号
     *
     * @mbg.generated
     */
    public String getChnlId() {
        return chnlId;
    }

    /**
     * 渠道编号
     * @param chnlId 渠道编号
     *
     * @mbg.generated
     */
    public void setChnlId(String chnlId) {
        this.chnlId = chnlId;
    }

    /**
     * 渠道商户号
     * @return chnl_mchnt_cd 渠道商户号
     *
     * @mbg.generated
     */
    public String getChnlMchntCd() {
        return chnlMchntCd;
    }

    /**
     * 渠道商户号
     * @param chnlMchntCd 渠道商户号
     *
     * @mbg.generated
     */
    public void setChnlMchntCd(String chnlMchntCd) {
        this.chnlMchntCd = chnlMchntCd;
    }

    /**
     * 币别
     * @return curr_cd 币别
     *
     * @mbg.generated
     */
    public String getCurrCd() {
        return currCd;
    }

    /**
     * 币别
     * @param currCd 币别
     *
     * @mbg.generated
     */
    public void setCurrCd(String currCd) {
        this.currCd = currCd;
    }

    /**
     * @return priority 
     *
     * @mbg.generated
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * @param priority 
     *
     * @mbg.generated
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    /**
     * 权重，数字越大机率越高
     * @return weight 权重，数字越大机率越高
     *
     * @mbg.generated
     */
    public Integer getWeight() {
        return weight;
    }

    /**
     * 权重，数字越大机率越高
     * @param weight 权重，数字越大机率越高
     *
     * @mbg.generated
     */
    public void setWeight(Integer weight) {
        this.weight = weight;
    }

    /**
     * 状态(1=有效，0-无效)
     * @return route_status 状态(1=有效，0-无效)
     *
     * @mbg.generated
     */
    public String getRouteStatus() {
        return routeStatus;
    }

    /**
     * 状态(1=有效，0-无效)
     * @param routeStatus 状态(1=有效，0-无效)
     *
     * @mbg.generated
     */
    public void setRouteStatus(String routeStatus) {
        this.routeStatus = routeStatus;
    }

    /**
     * 单笔最低金额限制(单位：分)
     * @return tx_amt_min 单笔最低金额限制(单位：分)
     *
     * @mbg.generated
     */
    public String getTxAmtMin() {
        return txAmtMin;
    }

    /**
     * 单笔最低金额限制(单位：分)
     * @param txAmtMin 单笔最低金额限制(单位：分)
     *
     * @mbg.generated
     */
    public void setTxAmtMin(String txAmtMin) {
        this.txAmtMin = txAmtMin;
    }

    /**
     * 单笔最大限额(单位：分)
     * @return tx_amt_max 单笔最大限额(单位：分)
     *
     * @mbg.generated
     */
    public String getTxAmtMax() {
        return txAmtMax;
    }

    /**
     * 单笔最大限额(单位：分)
     * @param txAmtMax 单笔最大限额(单位：分)
     *
     * @mbg.generated
     */
    public void setTxAmtMax(String txAmtMax) {
        this.txAmtMax = txAmtMax;
    }

    /**
     * 交易时段限制，例："ALL" 或 "0800-1200,1400-2000"
     * @return tx_time_limit 交易时段限制，例："ALL" 或 "0800-1200,1400-2000"
     *
     * @mbg.generated
     */
    public String getTxTimeLimit() {
        return txTimeLimit;
    }

    /**
     * 交易时段限制，例："ALL" 或 "0800-1200,1400-2000"
     * @param txTimeLimit 交易时段限制，例："ALL" 或 "0800-1200,1400-2000"
     *
     * @mbg.generated
     */
    public void setTxTimeLimit(String txTimeLimit) {
        this.txTimeLimit = txTimeLimit;
    }

    /**
     * 当日交易累计限额(单位：分)
     * @return tx_day_max 当日交易累计限额(单位：分)
     *
     * @mbg.generated
     */
    public String getTxDayMax() {
        return txDayMax;
    }

    /**
     * 当日交易累计限额(单位：分)
     * @param txDayMax 当日交易累计限额(单位：分)
     *
     * @mbg.generated
     */
    public void setTxDayMax(String txDayMax) {
        this.txDayMax = txDayMax;
    }

    /**
     * 单卡当日累计限額(单位：分)
     * @return tx_card_day_max 单卡当日累计限額(单位：分)
     *
     * @mbg.generated
     */
    public String getTxCardDayMax() {
        return txCardDayMax;
    }

    /**
     * 单卡当日累计限額(单位：分)
     * @param txCardDayMax 单卡当日累计限額(单位：分)
     *
     * @mbg.generated
     */
    public void setTxCardDayMax(String txCardDayMax) {
        this.txCardDayMax = txCardDayMax;
    }

    /**
     * 可代付馀额
     * @return available_balance 可代付馀额
     *
     * @mbg.generated
     */
    public Long getAvailableBalance() {
        return availableBalance;
    }

    /**
     * 可代付馀额
     * @param availableBalance 可代付馀额
     *
     * @mbg.generated
     */
    public void setAvailableBalance(Long availableBalance) {
        this.availableBalance = availableBalance;
    }

    /**
     * 保留余额
     * @return obligated_balance 保留余额
     *
     * @mbg.generated
     */
    public Long getObligatedBalance() {
        return obligatedBalance;
    }

    /**
     * 保留余额
     * @param obligatedBalance 保留余额
     *
     * @mbg.generated
     */
    public void setObligatedBalance(Long obligatedBalance) {
        this.obligatedBalance = obligatedBalance;
    }

    /**
     * 不可代付馀额(T1馀额)
     * @return frozen_t1_balance 不可代付馀额(T1馀额)
     *
     * @mbg.generated
     */
    public Long getFrozenT1Balance() {
        return frozenT1Balance;
    }

    /**
     * 不可代付馀额(T1馀额)
     * @param frozenT1Balance 不可代付馀额(T1馀额)
     *
     * @mbg.generated
     */
    public void setFrozenT1Balance(Long frozenT1Balance) {
        this.frozenT1Balance = frozenT1Balance;
    }

    /**
     * 冻结款
     * @return frozen_balance 冻结款
     *
     * @mbg.generated
     */
    public Long getFrozenBalance() {
        return frozenBalance;
    }

    /**
     * 冻结款
     * @param frozenBalance 冻结款
     *
     * @mbg.generated
     */
    public void setFrozenBalance(Long frozenBalance) {
        this.frozenBalance = frozenBalance;
    }

    /**
     * 状态：0=无效, 1=有效,2=锁定
     * @return account_state 状态：0=无效, 1=有效,2=锁定
     *
     * @mbg.generated
     */
    public String getAccountState() {
        return accountState;
    }

    /**
     * 状态：0=无效, 1=有效,2=锁定
     * @param accountState 状态：0=无效, 1=有效,2=锁定
     *
     * @mbg.generated
     */
    public void setAccountState(String accountState) {
        this.accountState = accountState;
    }

    /**
     * 当日累计交易额(收入)
     * @return dayTxnAmt 当日累计交易额(收入)
     *
     * @mbg.generated
     */
    public Long getDaytxnamt() {
        return daytxnamt;
    }

    /**
     * 当日累计交易额(收入)
     * @param daytxnamt 当日累计交易额(收入)
     *
     * @mbg.generated
     */
    public void setDaytxnamt(Long daytxnamt) {
        this.daytxnamt = daytxnamt;
    }

    /**
     * 当日累计交易手续费
     * @return dayTxnFee 当日累计交易手续费
     *
     * @mbg.generated
     */
    public Long getDaytxnfee() {
        return daytxnfee;
    }

    /**
     * 当日累计交易手续费
     * @param daytxnfee 当日累计交易手续费
     *
     * @mbg.generated
     */
    public void setDaytxnfee(Long daytxnfee) {
        this.daytxnfee = daytxnfee;
    }

    /**
     * 当日累计交易笔数
     * @return dayTxnCount 当日累计交易笔数
     *
     * @mbg.generated
     */
    public Integer getDaytxncount() {
        return daytxncount;
    }

    /**
     * 当日累计交易笔数
     * @param daytxncount 当日累计交易笔数
     *
     * @mbg.generated
     */
    public void setDaytxncount(Integer daytxncount) {
        this.daytxncount = daytxncount;
    }

    /**
     * 当日累计提现金额(支出)
     * @return dayWithdrawAmt 当日累计提现金额(支出)
     *
     * @mbg.generated
     */
    public Long getDaywithdrawamt() {
        return daywithdrawamt;
    }

    /**
     * 当日累计提现金额(支出)
     * @param daywithdrawamt 当日累计提现金额(支出)
     *
     * @mbg.generated
     */
    public void setDaywithdrawamt(Long daywithdrawamt) {
        this.daywithdrawamt = daywithdrawamt;
    }

    /**
     * 当日累计提现手续费
     * @return dayWithdrawFee 当日累计提现手续费
     *
     * @mbg.generated
     */
    public Long getDaywithdrawfee() {
        return daywithdrawfee;
    }

    /**
     * 当日累计提现手续费
     * @param daywithdrawfee 当日累计提现手续费
     *
     * @mbg.generated
     */
    public void setDaywithdrawfee(Long daywithdrawfee) {
        this.daywithdrawfee = daywithdrawfee;
    }

    /**
     * 当日累计提现笔数
     * @return dayWithdrawCount 当日累计提现笔数
     *
     * @mbg.generated
     */
    public Integer getDaywithdrawcount() {
        return daywithdrawcount;
    }

    /**
     * 当日累计提现笔数
     * @param daywithdrawcount 当日累计提现笔数
     *
     * @mbg.generated
     */
    public void setDaywithdrawcount(Integer daywithdrawcount) {
        this.daywithdrawcount = daywithdrawcount;
    }

    /**
     * 金額表示單位 = 0.01
     * @return unit 金額表示單位 = 0.01
     *
     * @mbg.generated
     */
    public BigDecimal getUnit() {
        return unit;
    }

    /**
     * 金額表示單位 = 0.01
     * @param unit 金額表示單位 = 0.01
     *
     * @mbg.generated
     */
    public void setUnit(BigDecimal unit) {
        this.unit = unit;
    }

    /**
     * 扩展标签
     * @return tags 扩展标签
     *
     * @mbg.generated
     */
    public String getTags() {
        return tags;
    }

    /**
     * 扩展标签
     * @param tags 扩展标签
     *
     * @mbg.generated
     */
    public void setTags(String tags) {
        this.tags = tags;
    }

    /**
     * @return sel_bank_num 
     *
     * @mbg.generated
     */
    public String getSelBankNum() {
        return selBankNum;
    }

    /**
     * @param selBankNum 
     *
     * @mbg.generated
     */
    public void setSelBankNum(String selBankNum) {
        this.selBankNum = selBankNum;
    }

    /**
     * @return sel_bank_name 
     *
     * @mbg.generated
     */
    public String getSelBankName() {
        return selBankName;
    }

    /**
     * @param selBankName 
     *
     * @mbg.generated
     */
    public void setSelBankName(String selBankName) {
        this.selBankName = selBankName;
    }

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TxnRoutingInfoWdPool other = (TxnRoutingInfoWdPool) that;
        return (this.getIntTransCd() == null ? other.getIntTransCd() == null : this.getIntTransCd().equals(other.getIntTransCd()))
            && (this.getMchntCd() == null ? other.getMchntCd() == null : this.getMchntCd().equals(other.getMchntCd()))
            && (this.getChnlId() == null ? other.getChnlId() == null : this.getChnlId().equals(other.getChnlId()))
            && (this.getChnlMchntCd() == null ? other.getChnlMchntCd() == null : this.getChnlMchntCd().equals(other.getChnlMchntCd()))
            && (this.getCurrCd() == null ? other.getCurrCd() == null : this.getCurrCd().equals(other.getCurrCd()))
            && (this.getPriority() == null ? other.getPriority() == null : this.getPriority().equals(other.getPriority()))
            && (this.getWeight() == null ? other.getWeight() == null : this.getWeight().equals(other.getWeight()))
            && (this.getRouteStatus() == null ? other.getRouteStatus() == null : this.getRouteStatus().equals(other.getRouteStatus()))
            && (this.getTxAmtMin() == null ? other.getTxAmtMin() == null : this.getTxAmtMin().equals(other.getTxAmtMin()))
            && (this.getTxAmtMax() == null ? other.getTxAmtMax() == null : this.getTxAmtMax().equals(other.getTxAmtMax()))
            && (this.getTxTimeLimit() == null ? other.getTxTimeLimit() == null : this.getTxTimeLimit().equals(other.getTxTimeLimit()))
            && (this.getTxDayMax() == null ? other.getTxDayMax() == null : this.getTxDayMax().equals(other.getTxDayMax()))
            && (this.getTxCardDayMax() == null ? other.getTxCardDayMax() == null : this.getTxCardDayMax().equals(other.getTxCardDayMax()))
            && (this.getAvailableBalance() == null ? other.getAvailableBalance() == null : this.getAvailableBalance().equals(other.getAvailableBalance()))
            && (this.getObligatedBalance() == null ? other.getObligatedBalance() == null : this.getObligatedBalance().equals(other.getObligatedBalance()))
            && (this.getFrozenT1Balance() == null ? other.getFrozenT1Balance() == null : this.getFrozenT1Balance().equals(other.getFrozenT1Balance()))
            && (this.getFrozenBalance() == null ? other.getFrozenBalance() == null : this.getFrozenBalance().equals(other.getFrozenBalance()))
            && (this.getAccountState() == null ? other.getAccountState() == null : this.getAccountState().equals(other.getAccountState()))
            && (this.getDaytxnamt() == null ? other.getDaytxnamt() == null : this.getDaytxnamt().equals(other.getDaytxnamt()))
            && (this.getDaytxnfee() == null ? other.getDaytxnfee() == null : this.getDaytxnfee().equals(other.getDaytxnfee()))
            && (this.getDaytxncount() == null ? other.getDaytxncount() == null : this.getDaytxncount().equals(other.getDaytxncount()))
            && (this.getDaywithdrawamt() == null ? other.getDaywithdrawamt() == null : this.getDaywithdrawamt().equals(other.getDaywithdrawamt()))
            && (this.getDaywithdrawfee() == null ? other.getDaywithdrawfee() == null : this.getDaywithdrawfee().equals(other.getDaywithdrawfee()))
            && (this.getDaywithdrawcount() == null ? other.getDaywithdrawcount() == null : this.getDaywithdrawcount().equals(other.getDaywithdrawcount()))
            && (this.getUnit() == null ? other.getUnit() == null : this.getUnit().equals(other.getUnit()))
            && (this.getTags() == null ? other.getTags() == null : this.getTags().equals(other.getTags()))
            && (this.getSelBankNum() == null ? other.getSelBankNum() == null : this.getSelBankNum().equals(other.getSelBankNum()))
            && (this.getSelBankName() == null ? other.getSelBankName() == null : this.getSelBankName().equals(other.getSelBankName()));
    }

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getIntTransCd() == null) ? 0 : getIntTransCd().hashCode());
        result = prime * result + ((getMchntCd() == null) ? 0 : getMchntCd().hashCode());
        result = prime * result + ((getChnlId() == null) ? 0 : getChnlId().hashCode());
        result = prime * result + ((getChnlMchntCd() == null) ? 0 : getChnlMchntCd().hashCode());
        result = prime * result + ((getCurrCd() == null) ? 0 : getCurrCd().hashCode());
        result = prime * result + ((getPriority() == null) ? 0 : getPriority().hashCode());
        result = prime * result + ((getWeight() == null) ? 0 : getWeight().hashCode());
        result = prime * result + ((getRouteStatus() == null) ? 0 : getRouteStatus().hashCode());
        result = prime * result + ((getTxAmtMin() == null) ? 0 : getTxAmtMin().hashCode());
        result = prime * result + ((getTxAmtMax() == null) ? 0 : getTxAmtMax().hashCode());
        result = prime * result + ((getTxTimeLimit() == null) ? 0 : getTxTimeLimit().hashCode());
        result = prime * result + ((getTxDayMax() == null) ? 0 : getTxDayMax().hashCode());
        result = prime * result + ((getTxCardDayMax() == null) ? 0 : getTxCardDayMax().hashCode());
        result = prime * result + ((getAvailableBalance() == null) ? 0 : getAvailableBalance().hashCode());
        result = prime * result + ((getObligatedBalance() == null) ? 0 : getObligatedBalance().hashCode());
        result = prime * result + ((getFrozenT1Balance() == null) ? 0 : getFrozenT1Balance().hashCode());
        result = prime * result + ((getFrozenBalance() == null) ? 0 : getFrozenBalance().hashCode());
        result = prime * result + ((getAccountState() == null) ? 0 : getAccountState().hashCode());
        result = prime * result + ((getDaytxnamt() == null) ? 0 : getDaytxnamt().hashCode());
        result = prime * result + ((getDaytxnfee() == null) ? 0 : getDaytxnfee().hashCode());
        result = prime * result + ((getDaytxncount() == null) ? 0 : getDaytxncount().hashCode());
        result = prime * result + ((getDaywithdrawamt() == null) ? 0 : getDaywithdrawamt().hashCode());
        result = prime * result + ((getDaywithdrawfee() == null) ? 0 : getDaywithdrawfee().hashCode());
        result = prime * result + ((getDaywithdrawcount() == null) ? 0 : getDaywithdrawcount().hashCode());
        result = prime * result + ((getUnit() == null) ? 0 : getUnit().hashCode());
        result = prime * result + ((getTags() == null) ? 0 : getTags().hashCode());
        result = prime * result + ((getSelBankNum() == null) ? 0 : getSelBankNum().hashCode());
        result = prime * result + ((getSelBankName() == null) ? 0 : getSelBankName().hashCode());
        return result;
    }

    /**
     * Database table : view_txn_routing_info_wd_pool
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(", intTransCd=").append(intTransCd);
        sb.append(", mchntCd=").append(mchntCd);
        sb.append(", chnlId=").append(chnlId);
        sb.append(", chnlMchntCd=").append(chnlMchntCd);
        sb.append(", currCd=").append(currCd);
        sb.append(", priority=").append(priority);
        sb.append(", weight=").append(weight);
        sb.append(", routeStatus=").append(routeStatus);
        sb.append(", txAmtMin=").append(txAmtMin);
        sb.append(", txAmtMax=").append(txAmtMax);
        sb.append(", txTimeLimit=").append(txTimeLimit);
        sb.append(", txDayMax=").append(txDayMax);
        sb.append(", txCardDayMax=").append(txCardDayMax);
        sb.append(", availableBalance=").append(availableBalance);
        sb.append(", obligatedBalance=").append(obligatedBalance);
        sb.append(", frozenT1Balance=").append(frozenT1Balance);
        sb.append(", frozenBalance=").append(frozenBalance);
        sb.append(", accountState=").append(accountState);
        sb.append(", daytxnamt=").append(daytxnamt);
        sb.append(", daytxnfee=").append(daytxnfee);
        sb.append(", daytxncount=").append(daytxncount);
        sb.append(", daywithdrawamt=").append(daywithdrawamt);
        sb.append(", daywithdrawfee=").append(daywithdrawfee);
        sb.append(", daywithdrawcount=").append(daywithdrawcount);
        sb.append(", unit=").append(unit);
        sb.append(", tags=").append(tags);
        sb.append(", selBankNum=").append(selBankNum);
        sb.append(", selBankName=").append(selBankName);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(TxnRoutingInfoWdPool source) {
        this.intTransCd=source.intTransCd;
        this.mchntCd=source.mchntCd;
        this.chnlId=source.chnlId;
        this.chnlMchntCd=source.chnlMchntCd;
        this.currCd=source.currCd;
        this.priority=source.priority;
        this.weight=source.weight;
        this.routeStatus=source.routeStatus;
        this.txAmtMin=source.txAmtMin;
        this.txAmtMax=source.txAmtMax;
        this.txTimeLimit=source.txTimeLimit;
        this.txDayMax=source.txDayMax;
        this.txCardDayMax=source.txCardDayMax;
        this.availableBalance=source.availableBalance;
        this.obligatedBalance=source.obligatedBalance;
        this.frozenT1Balance=source.frozenT1Balance;
        this.frozenBalance=source.frozenBalance;
        this.accountState=source.accountState;
        this.daytxnamt=source.daytxnamt;
        this.daytxnfee=source.daytxnfee;
        this.daytxncount=source.daytxncount;
        this.daywithdrawamt=source.daywithdrawamt;
        this.daywithdrawfee=source.daywithdrawfee;
        this.daywithdrawcount=source.daywithdrawcount;
        this.unit=source.unit;
        this.tags=source.tags;
        this.selBankNum=source.selBankNum;
        this.selBankName=source.selBankName;
    }
}