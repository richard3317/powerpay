package com.icpay.payment.db.dao.mybatis.model;

import java.io.Serializable;
import java.util.Date;

/**
 * [Model class] 
 *
 * This class was generated by MyBatis Generator.
 * Database table : tbl_mchnt_user_info

 *
 * @mbg.generated
 */
public class MchntUserInfo extends MchntUserInfoKey implements Serializable {
    /**
     * 用户登入密码hash
     * Database column : tbl_mchnt_user_info.login_pwd
     *
     * @mbg.generated
     */
    private String loginPwd;

    /**
     * OTP单次验证密码-登入用
     * Database column : tbl_mchnt_user_info.otp_secret
     *
     * @mbg.generated
     */
    private String otpSecret;

    /**
     * 9=已锁定,2=已禁用,0=初始状况(需重置密码),1=正常使用
     * Database column : tbl_mchnt_user_info.user_state
     *
     * @mbg.generated
     */
    private String userState;

    /**
     * 用户角色，目前支持三种角色: su(超级用户), wd(代付+充值), py(充值)
     * Database column : tbl_mchnt_user_info.user_role
     *
     * @mbg.generated
     */
    private String userRole;

    /**
     * 备注
     * Database column : tbl_mchnt_user_info.comment
     *
     * @mbg.generated
     */
    private String comment;

    /**
     * 资料操作人员
     * Database column : tbl_mchnt_user_info.last_oper_id
     *
     * @mbg.generated
     */
    private String lastOperId;

    /**
     * 最后登入的 IP
     * Database column : tbl_mchnt_user_info.last_login_ip
     *
     * @mbg.generated
     */
    private String lastLoginIp;

    /**
     * 最后登入时间
     * Database column : tbl_mchnt_user_info.last_login_ts
     *
     * @mbg.generated
     */
    private String lastLoginTs;

    /**
     * 登入失败次数
     * Database column : tbl_mchnt_user_info.login_failed_cnt
     *
     * @mbg.generated
     */
    private Integer loginFailedCnt;

    /**
     * 登入状况注记
     * Database column : tbl_mchnt_user_info.login_comment
     *
     * @mbg.generated
     */
    private String loginComment;

    /**
     * Database column : tbl_mchnt_user_info.rec_crt_ts
     *
     * @mbg.generated
     */
    private Date recCrtTs;

    /**
     * Database column : tbl_mchnt_user_info.rec_upd_ts
     *
     * @mbg.generated
     */
    private Date recUpdTs;

    /**
     * 密码更新时间
     * Database column : tbl_mchnt_user_info.pwd_upd_ts
     *
     * @mbg.generated
     */
    private String pwdUpdTs;

    /**
     * 最後登入成功的IP
     * Database column : tbl_mchnt_user_info.last_login_ok_ip
     *
     * @mbg.generated
     */
    private String lastLoginOkIp;

    /**
     * 最後登入成功的時間
     * Database column : tbl_mchnt_user_info.last_login_ok_ts
     *
     * @mbg.generated
     */
    private String lastLoginOkTs;

    /**
     * 登出時間
     * Database column : tbl_mchnt_user_info.last_logout_ts
     *
     * @mbg.generated
     */
    private String lastLogoutTs;

    /**
     * 最後登入的session id
     * Database column : tbl_mchnt_user_info.last_login_session_id
     *
     * @mbg.generated
     */
    private String lastLoginSessionId;

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    public MchntUserInfo(String mchntCd, String userId, String loginPwd, String otpSecret, String userState, String userRole, String comment, String lastOperId, String lastLoginIp, String lastLoginTs, Integer loginFailedCnt, String loginComment, Date recCrtTs, Date recUpdTs, String pwdUpdTs, String lastLoginOkIp, String lastLoginOkTs, String lastLogoutTs, String lastLoginSessionId) {
        super(mchntCd, userId);
        this.loginPwd = loginPwd;
        this.otpSecret = otpSecret;
        this.userState = userState;
        this.userRole = userRole;
        this.comment = comment;
        this.lastOperId = lastOperId;
        this.lastLoginIp = lastLoginIp;
        this.lastLoginTs = lastLoginTs;
        this.loginFailedCnt = loginFailedCnt;
        this.loginComment = loginComment;
        this.recCrtTs = recCrtTs;
        this.recUpdTs = recUpdTs;
        this.pwdUpdTs = pwdUpdTs;
        this.lastLoginOkIp = lastLoginOkIp;
        this.lastLoginOkTs = lastLoginOkTs;
        this.lastLogoutTs = lastLogoutTs;
        this.lastLoginSessionId = lastLoginSessionId;
    }

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    public MchntUserInfo() {
        super();
    }

    /**
     * 用户登入密码hash
     * @return login_pwd 用户登入密码hash
     *
     * @mbg.generated
     */
    public String getLoginPwd() {
        return loginPwd;
    }

    /**
     * 用户登入密码hash
     * @param loginPwd 用户登入密码hash
     *
     * @mbg.generated
     */
    public void setLoginPwd(String loginPwd) {
        this.loginPwd = loginPwd;
    }

    /**
     * OTP单次验证密码-登入用
     * @return otp_secret OTP单次验证密码-登入用
     *
     * @mbg.generated
     */
    public String getOtpSecret() {
        return otpSecret;
    }

    /**
     * OTP单次验证密码-登入用
     * @param otpSecret OTP单次验证密码-登入用
     *
     * @mbg.generated
     */
    public void setOtpSecret(String otpSecret) {
        this.otpSecret = otpSecret;
    }

    /**
     * 9=已锁定,2=已禁用,0=初始状况(需重置密码),1=正常使用
     * @return user_state 9=已锁定,2=已禁用,0=初始状况(需重置密码),1=正常使用
     *
     * @mbg.generated
     */
    public String getUserState() {
        return userState;
    }

    /**
     * 9=已锁定,2=已禁用,0=初始状况(需重置密码),1=正常使用
     * @param userState 9=已锁定,2=已禁用,0=初始状况(需重置密码),1=正常使用
     *
     * @mbg.generated
     */
    public void setUserState(String userState) {
        this.userState = userState;
    }

    /**
     * 用户角色，目前支持三种角色: su(超级用户), wd(代付+充值), py(充值)
     * @return user_role 用户角色，目前支持三种角色: su(超级用户), wd(代付+充值), py(充值)
     *
     * @mbg.generated
     */
    public String getUserRole() {
        return userRole;
    }

    /**
     * 用户角色，目前支持三种角色: su(超级用户), wd(代付+充值), py(充值)
     * @param userRole 用户角色，目前支持三种角色: su(超级用户), wd(代付+充值), py(充值)
     *
     * @mbg.generated
     */
    public void setUserRole(String userRole) {
        this.userRole = userRole;
    }

    /**
     * 备注
     * @return comment 备注
     *
     * @mbg.generated
     */
    public String getComment() {
        return comment;
    }

    /**
     * 备注
     * @param comment 备注
     *
     * @mbg.generated
     */
    public void setComment(String comment) {
        this.comment = comment;
    }

    /**
     * 资料操作人员
     * @return last_oper_id 资料操作人员
     *
     * @mbg.generated
     */
    public String getLastOperId() {
        return lastOperId;
    }

    /**
     * 资料操作人员
     * @param lastOperId 资料操作人员
     *
     * @mbg.generated
     */
    public void setLastOperId(String lastOperId) {
        this.lastOperId = lastOperId;
    }

    /**
     * 最后登入的 IP
     * @return last_login_ip 最后登入的 IP
     *
     * @mbg.generated
     */
    public String getLastLoginIp() {
        return lastLoginIp;
    }

    /**
     * 最后登入的 IP
     * @param lastLoginIp 最后登入的 IP
     *
     * @mbg.generated
     */
    public void setLastLoginIp(String lastLoginIp) {
        this.lastLoginIp = lastLoginIp;
    }

    /**
     * 最后登入时间
     * @return last_login_ts 最后登入时间
     *
     * @mbg.generated
     */
    public String getLastLoginTs() {
        return lastLoginTs;
    }

    /**
     * 最后登入时间
     * @param lastLoginTs 最后登入时间
     *
     * @mbg.generated
     */
    public void setLastLoginTs(String lastLoginTs) {
        this.lastLoginTs = lastLoginTs;
    }

    /**
     * 登入失败次数
     * @return login_failed_cnt 登入失败次数
     *
     * @mbg.generated
     */
    public Integer getLoginFailedCnt() {
        return loginFailedCnt;
    }

    /**
     * 登入失败次数
     * @param loginFailedCnt 登入失败次数
     *
     * @mbg.generated
     */
    public void setLoginFailedCnt(Integer loginFailedCnt) {
        this.loginFailedCnt = loginFailedCnt;
    }

    /**
     * 登入状况注记
     * @return login_comment 登入状况注记
     *
     * @mbg.generated
     */
    public String getLoginComment() {
        return loginComment;
    }

    /**
     * 登入状况注记
     * @param loginComment 登入状况注记
     *
     * @mbg.generated
     */
    public void setLoginComment(String loginComment) {
        this.loginComment = loginComment;
    }

    /**
     * @return rec_crt_ts 
     *
     * @mbg.generated
     */
    public Date getRecCrtTs() {
        return recCrtTs;
    }

    /**
     * @param recCrtTs 
     *
     * @mbg.generated
     */
    public void setRecCrtTs(Date recCrtTs) {
        this.recCrtTs = recCrtTs;
    }

    /**
     * @return rec_upd_ts 
     *
     * @mbg.generated
     */
    public Date getRecUpdTs() {
        return recUpdTs;
    }

    /**
     * @param recUpdTs 
     *
     * @mbg.generated
     */
    public void setRecUpdTs(Date recUpdTs) {
        this.recUpdTs = recUpdTs;
    }

    /**
     * 密码更新时间
     * @return pwd_upd_ts 密码更新时间
     *
     * @mbg.generated
     */
    public String getPwdUpdTs() {
        return pwdUpdTs;
    }

    /**
     * 密码更新时间
     * @param pwdUpdTs 密码更新时间
     *
     * @mbg.generated
     */
    public void setPwdUpdTs(String pwdUpdTs) {
        this.pwdUpdTs = pwdUpdTs;
    }

    /**
     * 最後登入成功的IP
     * @return last_login_ok_ip 最後登入成功的IP
     *
     * @mbg.generated
     */
    public String getLastLoginOkIp() {
        return lastLoginOkIp;
    }

    /**
     * 最後登入成功的IP
     * @param lastLoginOkIp 最後登入成功的IP
     *
     * @mbg.generated
     */
    public void setLastLoginOkIp(String lastLoginOkIp) {
        this.lastLoginOkIp = lastLoginOkIp;
    }

    /**
     * 最後登入成功的時間
     * @return last_login_ok_ts 最後登入成功的時間
     *
     * @mbg.generated
     */
    public String getLastLoginOkTs() {
        return lastLoginOkTs;
    }

    /**
     * 最後登入成功的時間
     * @param lastLoginOkTs 最後登入成功的時間
     *
     * @mbg.generated
     */
    public void setLastLoginOkTs(String lastLoginOkTs) {
        this.lastLoginOkTs = lastLoginOkTs;
    }

    /**
     * 登出時間
     * @return last_logout_ts 登出時間
     *
     * @mbg.generated
     */
    public String getLastLogoutTs() {
        return lastLogoutTs;
    }

    /**
     * 登出時間
     * @param lastLogoutTs 登出時間
     *
     * @mbg.generated
     */
    public void setLastLogoutTs(String lastLogoutTs) {
        this.lastLogoutTs = lastLogoutTs;
    }

    /**
     * 最後登入的session id
     * @return last_login_session_id 最後登入的session id
     *
     * @mbg.generated
     */
    public String getLastLoginSessionId() {
        return lastLoginSessionId;
    }

    /**
     * 最後登入的session id
     * @param lastLoginSessionId 最後登入的session id
     *
     * @mbg.generated
     */
    public void setLastLoginSessionId(String lastLoginSessionId) {
        this.lastLoginSessionId = lastLoginSessionId;
    }

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        MchntUserInfo other = (MchntUserInfo) that;
        return (this.getMchntCd() == null ? other.getMchntCd() == null : this.getMchntCd().equals(other.getMchntCd()))
            && (this.getUserId() == null ? other.getUserId() == null : this.getUserId().equals(other.getUserId()))
            && (this.getLoginPwd() == null ? other.getLoginPwd() == null : this.getLoginPwd().equals(other.getLoginPwd()))
            && (this.getOtpSecret() == null ? other.getOtpSecret() == null : this.getOtpSecret().equals(other.getOtpSecret()))
            && (this.getUserState() == null ? other.getUserState() == null : this.getUserState().equals(other.getUserState()))
            && (this.getUserRole() == null ? other.getUserRole() == null : this.getUserRole().equals(other.getUserRole()))
            && (this.getComment() == null ? other.getComment() == null : this.getComment().equals(other.getComment()))
            && (this.getLastOperId() == null ? other.getLastOperId() == null : this.getLastOperId().equals(other.getLastOperId()))
            && (this.getLastLoginIp() == null ? other.getLastLoginIp() == null : this.getLastLoginIp().equals(other.getLastLoginIp()))
            && (this.getLastLoginTs() == null ? other.getLastLoginTs() == null : this.getLastLoginTs().equals(other.getLastLoginTs()))
            && (this.getLoginFailedCnt() == null ? other.getLoginFailedCnt() == null : this.getLoginFailedCnt().equals(other.getLoginFailedCnt()))
            && (this.getLoginComment() == null ? other.getLoginComment() == null : this.getLoginComment().equals(other.getLoginComment()))
            && (this.getRecCrtTs() == null ? other.getRecCrtTs() == null : this.getRecCrtTs().equals(other.getRecCrtTs()))
            && (this.getRecUpdTs() == null ? other.getRecUpdTs() == null : this.getRecUpdTs().equals(other.getRecUpdTs()))
            && (this.getPwdUpdTs() == null ? other.getPwdUpdTs() == null : this.getPwdUpdTs().equals(other.getPwdUpdTs()))
            && (this.getLastLoginOkIp() == null ? other.getLastLoginOkIp() == null : this.getLastLoginOkIp().equals(other.getLastLoginOkIp()))
            && (this.getLastLoginOkTs() == null ? other.getLastLoginOkTs() == null : this.getLastLoginOkTs().equals(other.getLastLoginOkTs()))
            && (this.getLastLogoutTs() == null ? other.getLastLogoutTs() == null : this.getLastLogoutTs().equals(other.getLastLogoutTs()))
            && (this.getLastLoginSessionId() == null ? other.getLastLoginSessionId() == null : this.getLastLoginSessionId().equals(other.getLastLoginSessionId()));
    }

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getMchntCd() == null) ? 0 : getMchntCd().hashCode());
        result = prime * result + ((getUserId() == null) ? 0 : getUserId().hashCode());
        result = prime * result + ((getLoginPwd() == null) ? 0 : getLoginPwd().hashCode());
        result = prime * result + ((getOtpSecret() == null) ? 0 : getOtpSecret().hashCode());
        result = prime * result + ((getUserState() == null) ? 0 : getUserState().hashCode());
        result = prime * result + ((getUserRole() == null) ? 0 : getUserRole().hashCode());
        result = prime * result + ((getComment() == null) ? 0 : getComment().hashCode());
        result = prime * result + ((getLastOperId() == null) ? 0 : getLastOperId().hashCode());
        result = prime * result + ((getLastLoginIp() == null) ? 0 : getLastLoginIp().hashCode());
        result = prime * result + ((getLastLoginTs() == null) ? 0 : getLastLoginTs().hashCode());
        result = prime * result + ((getLoginFailedCnt() == null) ? 0 : getLoginFailedCnt().hashCode());
        result = prime * result + ((getLoginComment() == null) ? 0 : getLoginComment().hashCode());
        result = prime * result + ((getRecCrtTs() == null) ? 0 : getRecCrtTs().hashCode());
        result = prime * result + ((getRecUpdTs() == null) ? 0 : getRecUpdTs().hashCode());
        result = prime * result + ((getPwdUpdTs() == null) ? 0 : getPwdUpdTs().hashCode());
        result = prime * result + ((getLastLoginOkIp() == null) ? 0 : getLastLoginOkIp().hashCode());
        result = prime * result + ((getLastLoginOkTs() == null) ? 0 : getLastLoginOkTs().hashCode());
        result = prime * result + ((getLastLogoutTs() == null) ? 0 : getLastLogoutTs().hashCode());
        result = prime * result + ((getLastLoginSessionId() == null) ? 0 : getLastLoginSessionId().hashCode());
        return result;
    }

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash=").append(hashCode());
        sb.append(getSuperToString());
        sb.append(", loginPwd=").append(loginPwd);
        sb.append(", otpSecret=").append(otpSecret);
        sb.append(", userState=").append(userState);
        sb.append(", userRole=").append(userRole);
        sb.append(", comment=").append(comment);
        sb.append(", lastOperId=").append(lastOperId);
        sb.append(", lastLoginIp=").append(lastLoginIp);
        sb.append(", lastLoginTs=").append(lastLoginTs);
        sb.append(", loginFailedCnt=").append(loginFailedCnt);
        sb.append(", loginComment=").append(loginComment);
        sb.append(", recCrtTs=").append(recCrtTs);
        sb.append(", recUpdTs=").append(recUpdTs);
        sb.append(", pwdUpdTs=").append(pwdUpdTs);
        sb.append(", lastLoginOkIp=").append(lastLoginOkIp);
        sb.append(", lastLoginOkTs=").append(lastLoginOkTs);
        sb.append(", lastLogoutTs=").append(lastLogoutTs);
        sb.append(", lastLoginSessionId=").append(lastLoginSessionId);
        sb.append("]");
        return sb.toString();
    }

    /**
     * Database table : tbl_mchnt_user_info
     *
     * @mbg.generated
     */
    private String getSuperToString() {
        String s = super.toString();
        String superCls = super.getClass().getSimpleName();
        if (!(s.contains("[Hash=") && s.contains(superCls))) return "";
        int end=-1;
        int start = s.indexOf("[Hash=");
        if (start>=0) {
            	start = s.indexOf(", ", start);
            	if (start>=0) {
                		end = s.lastIndexOf(']');
                		if (end>0) 
                			return ", "+s.substring(start+2, end)+"";
                	}
            }
            return "";
        }

    /**
     * Copy properties value from source.
     * @param source The instance that clone from.
     *
     * @mbg.generated
     */
    public void cloneFrom(MchntUserInfo source) {
        super.cloneFrom(source);
        this.loginPwd=source.loginPwd;
        this.otpSecret=source.otpSecret;
        this.userState=source.userState;
        this.userRole=source.userRole;
        this.comment=source.comment;
        this.lastOperId=source.lastOperId;
        this.lastLoginIp=source.lastLoginIp;
        this.lastLoginTs=source.lastLoginTs;
        this.loginFailedCnt=source.loginFailedCnt;
        this.loginComment=source.loginComment;
        this.recCrtTs=source.recCrtTs;
        this.recUpdTs=source.recUpdTs;
        this.pwdUpdTs=source.pwdUpdTs;
        this.lastLoginOkIp=source.lastLoginOkIp;
        this.lastLoginOkTs=source.lastLoginOkTs;
        this.lastLogoutTs=source.lastLogoutTs;
        this.lastLoginSessionId=source.lastLoginSessionId;
    }
}